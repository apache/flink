# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


#
# This file defines the Flink build for the "apache/flink" repository, including
# the following:
#  - PR builds (triggered through ci-bot)
#  - custom triggered e2e tests
#  - nightly builds

name: "Build Apache Repo"

on:
  push:
    branches:
      - hackathon2021b-migrate-to-GHA
  workflow_dispatch:

jobs:
  ci:
    uses: ververica/flink/.github/workflows/jobs-template-workflow.yml@HEAD
    with:
      test_pool_name: ""
      stage_name: "ci"
      environment: 'PROFILE="-Dhadoop.version=2.8.3 -Dinclude_hadoop_aws -Dscala-2.12"'
      jdk: 8
      mode: ""
      cache_key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml', '!**/target/**') }}
      cache_fallback_key: maven-${{ runner.os }}
      maven_cache_folder: ${{ github.workspace }}/.m2/repository
      flink_artifact_dir: ${{ github.workspace }}/flink_artifact
      docker_images_cache_key: docker-images-${{ runner.os }}-${{ hashFiles('**/cache_docker_images.sh', 'flink-test-utils-parent/**/DockerImageVersions.java') }}
      docker_images_cache_folder: ${{ github.workspace }}/.docker-cache
    secrets:
      s3_bucket: ""
      s3_access_key: ""
      s3_secret_key: ""
      glue_schema_access_key: ""
      glue_schema_secret_key: ""
  docs-404-check:
    runs-on: ubuntu-latest
    steps:
      - name: "Check if PR contains docs change"
        run: |
          source ./tools/azure-pipelines/build_properties.sh
          pr_contains_docs_changes
      - name: "Builds docs"
        run: ./tools/ci/docs.sh
