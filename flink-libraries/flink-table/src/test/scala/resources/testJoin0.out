== Abstract Syntax Tree ==
LogicalProject(a=[$0], c=[$2])
  LogicalFilter(condition=[=($1, $3)])
    LogicalJoin(condition=[true], joinType=[inner])
      LogicalTableScan(table=[[_DataSetTable_0]])
      LogicalTableScan(table=[[_DataSetTable_1]])

== Physical Execution Plan ==
Stage 4 : Data Source
	content : collect elements with CollectionInputFormat
	Partitioning : RANDOM_PARTITIONED

	Stage 3 : Map
		content : from: (a, b)
		ship_strategy : Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

Stage 6 : Data Source
	content : collect elements with CollectionInputFormat
	Partitioning : RANDOM_PARTITIONED

	Stage 5 : Map
		content : from: (c, d)
		ship_strategy : Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

		Stage 2 : Join
			content : where: (=(b, d)), join: (a, b, c, d)
			ship_strategy : Hash Partition on [1]
			exchange_mode : PIPELINED
			driver_strategy : Hybrid Hash (build: from: (a, b))
			Partitioning : RANDOM_PARTITIONED

			Stage 1 : FlatMap
				content : select: (a, c AS b)
				ship_strategy : Forward
				exchange_mode : PIPELINED
				driver_strategy : FlatMap
				Partitioning : RANDOM_PARTITIONED

				Stage 0 : Data Sink
					content : org.apache.flink.api.java.io.DiscardingOutputFormat
					ship_strategy : Forward
					exchange_mode : PIPELINED
					Partitioning : RANDOM_PARTITIONED

