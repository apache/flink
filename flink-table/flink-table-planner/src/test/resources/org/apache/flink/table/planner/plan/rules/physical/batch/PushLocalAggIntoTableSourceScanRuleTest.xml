<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testCannotPushDownLocalAggAfterLimitPushDown">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM (
  SELECT
    *
  FROM inventory
  LIMIT 100
) t
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalSort(fetch=[100])
         +- LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], type=[$4])
            +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[name, type]])
      +- LocalHashAggregate(groupBy=[name, type], select=[name, type, Partial_SUM(amount) AS sum$0])
         +- Calc(select=[name, type, amount])
            +- Limit(offset=[0], fetch=[100], global=[true])
               +- Exchange(distribution=[single])
                  +- Limit(offset=[0], fetch=[100], global=[false])
                     +- TableSourceScan(table=[[default_catalog, default_database, inventory, limit=[100]]], fields=[id, name, amount, price, type])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownLocalAggWithUDAF">
    <Resource name="sql">
      <![CDATA[SELECT
  udaf_collect(amount),
  name,
  type
FROM inventory
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[udaf_collect($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- SortAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_udaf_collect(EXPR$0) AS EXPR$0])
   +- Sort(orderBy=[name ASC, type ASC])
      +- Exchange(distribution=[hash[name, type]])
         +- LocalSortAggregate(groupBy=[name, type], select=[name, type, Partial_udaf_collect(amount) AS EXPR$0])
            +- Sort(orderBy=[name ASC, type ASC])
               +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, type, amount], metadata=[]]], fields=[name, type, amount])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownLocalAggWithUnsupportedDataTypes">
    <Resource name="sql">
      <![CDATA[SELECT
  max(name),
  type
FROM inventory
  group by type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$1], type=[$0])
+- LogicalAggregate(group=[{0}], EXPR$0=[MAX($1)])
   +- LogicalProject(type=[$4], name=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, type])
+- SortAggregate(isMerge=[true], groupBy=[type], select=[type, Final_MAX(max$0) AS EXPR$0])
   +- Sort(orderBy=[type ASC])
      +- Exchange(distribution=[hash[type]])
         +- LocalSortAggregate(groupBy=[type], select=[type, Partial_MAX(name) AS max$0])
            +- Sort(orderBy=[type ASC])
               +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[type, name], metadata=[]]], fields=[type, name])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithArgFilter">
    <Resource name="sql">
      <![CDATA[SELECT
  min(id),
  max(amount),
  sum(price),
  count(id) FILTER(WHERE id > 100),
  name
FROM inventory
  group by name]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3], EXPR$3=[$4], name=[$0])
+- LogicalAggregate(group=[{0}], EXPR$0=[MIN($1)], EXPR$1=[MAX($2)], EXPR$2=[SUM($3)], EXPR$3=[COUNT($1) FILTER $4])
   +- LogicalProject(name=[$1], id=[$0], amount=[$2], price=[$3], $f4=[IS TRUE(>($0, 100))])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2, EXPR$3, name])
+- HashAggregate(isMerge=[true], groupBy=[name], select=[name, Final_MIN(min$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1, Final_SUM(sum$2) AS EXPR$2, Final_COUNT(count$3) AS EXPR$3])
   +- Exchange(distribution=[hash[name]])
      +- LocalHashAggregate(groupBy=[name], select=[name, Partial_MIN(id) AS min$0, Partial_MAX(amount) AS max$1, Partial_SUM(price) AS sum$2, Partial_COUNT(id) FILTER $f4 AS count$3])
         +- Calc(select=[name, id, amount, price, IS TRUE(>(id, 100)) AS $f4])
            +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, id, amount, price], metadata=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithColumnExpression">
    <Resource name="sql">
      <![CDATA[SELECT
  min(amount + price),
  max(amount),
  sum(price),
  count(id),
  name
FROM inventory
  group by name]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3], EXPR$3=[$4], name=[$0])
+- LogicalAggregate(group=[{0}], EXPR$0=[MIN($1)], EXPR$1=[MAX($2)], EXPR$2=[SUM($3)], EXPR$3=[COUNT($4)])
   +- LogicalProject(name=[$1], $f1=[+($2, $3)], amount=[$2], price=[$3], id=[$0])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2, EXPR$3, name])
+- HashAggregate(isMerge=[true], groupBy=[name], select=[name, Final_MIN(min$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1, Final_SUM(sum$2) AS EXPR$2, Final_COUNT(count$3) AS EXPR$3])
   +- Exchange(distribution=[hash[name]])
      +- LocalHashAggregate(groupBy=[name], select=[name, Partial_MIN($f1) AS min$0, Partial_MAX(amount) AS max$1, Partial_SUM(price) AS sum$2, Partial_COUNT(id) AS count$3])
         +- Calc(select=[name, +(amount, price) AS $f1, amount, price, id])
            +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, amount, price, id], metadata=[]]], fields=[name, amount, price, id])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithUnsupportedAggFunction">
    <Resource name="sql">
      <![CDATA[SELECT
  min(id),
  max(amount),
  sum(price),
  count(distinct id),
  name
FROM inventory
  group by name]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], EXPR$2=[$3], EXPR$3=[$4], name=[$0])
+- LogicalAggregate(group=[{0}], EXPR$0=[MIN($1)], EXPR$1=[MAX($2)], EXPR$2=[SUM($3)], EXPR$3=[COUNT(DISTINCT $1)])
   +- LogicalProject(name=[$1], id=[$0], amount=[$2], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, EXPR$2, EXPR$3, name])
+- HashAggregate(isMerge=[true], groupBy=[name], select=[name, Final_MIN(min$0) AS EXPR$0, Final_MIN(min$1) AS EXPR$1, Final_MIN(min$2) AS EXPR$2, Final_COUNT(count$3) AS EXPR$3])
   +- Exchange(distribution=[hash[name]])
      +- LocalHashAggregate(groupBy=[name], select=[name, Partial_MIN(EXPR$0) FILTER $g_1 AS min$0, Partial_MIN(EXPR$1) FILTER $g_1 AS min$1, Partial_MIN(EXPR$2) FILTER $g_1 AS min$2, Partial_COUNT(id) FILTER $g_0 AS count$3])
         +- Calc(select=[name, id, EXPR$0, EXPR$1, EXPR$2, =(CASE(=($e, 0), 0, 1), 0) AS $g_0, =(CASE(=($e, 0), 0, 1), 1) AS $g_1])
            +- HashAggregate(isMerge=[true], groupBy=[name, id, $e], select=[name, id, $e, Final_MIN(min$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1, Final_SUM(sum$2) AS EXPR$2])
               +- Exchange(distribution=[hash[name, id, $e]])
                  +- LocalHashAggregate(groupBy=[name, id, $e], select=[name, id, $e, Partial_MIN(id_0) AS min$0, Partial_MAX(amount) AS max$1, Partial_SUM(price) AS sum$2])
                     +- Expand(projects=[{name, id, amount, price, 0 AS $e, id AS id_0}, {name, null AS id, amount, price, 1 AS $e, id AS id_0}])
                        +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, id, amount, price], metadata=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithWindowAggFunction">
    <Resource name="sql">
      <![CDATA[SELECT
  id,
  amount,
  sum(price) over (partition by name),
  name
FROM inventory]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], amount=[$2], EXPR$2=[CASE(>(COUNT($3) OVER (PARTITION BY $1), 0), $SUM0($3) OVER (PARTITION BY $1), null:BIGINT)], name=[$1])
+- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[id, amount, CASE(>(w0$o0, 0), w0$o1, null:BIGINT) AS EXPR$2, name])
+- OverAggregate(partitionBy=[name], window#0=[COUNT(price) AS w0$o0, $SUM0(price) AS w0$o1 RANG BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING], select=[id, name, amount, price, w0$o0, w0$o1])
   +- Sort(orderBy=[name ASC])
      +- Exchange(distribution=[hash[name]])
         +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[id, name, amount, price], metadata=[]]], fields=[id, name, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalHashAggWithGroup">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM inventory
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[name, type]])
      +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, type, amount], metadata=[], aggregates=[grouping=[name,type], aggFunctions=[LongSumAggFunction(amount)]]]], fields=[name, type, sum$0])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalAggAfterFilterPushDown">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM inventory
  where id = 123
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalFilter(condition=[=($0, 123)])
         +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[name, type]])
      +- TableSourceScan(table=[[default_catalog, default_database, inventory, filter=[=(id, 123:BIGINT)], project=[name, type, amount], metadata=[], aggregates=[grouping=[name,type], aggFunctions=[LongSumAggFunction(amount)]]]], fields=[name, type, sum$0])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalAggWithAuxGrouping">
    <Resource name="sql">
      <![CDATA[SELECT
  id, name, count(*)
FROM inventory_meta
  group by id, name]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalAggregate(group=[{0, 1}], EXPR$2=[COUNT()])
+- LogicalProject(id=[$0], name=[$1])
   +- LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], type=[$4], metadata_1=[$5], metadata_2=[$6])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory_meta, metadata=[metadata_1, metadata_2]]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashAggregate(isMerge=[true], groupBy=[id], auxGrouping=[name], select=[id, name, Final_COUNT(count1$0) AS EXPR$2])
+- Exchange(distribution=[hash[id]])
   +- TableSourceScan(table=[[default_catalog, default_database, inventory_meta, project=[id, name], metadata=[], aggregates=[grouping=[id,name], aggFunctions=[Count1AggFunction()]]]], fields=[id, name, count1$0])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalAggWithMetadata">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  max(metadata_1),
  name,
  type
FROM inventory_meta
  where id = 123
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], EXPR$1=[$3], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)], EXPR$1=[MAX($3)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2], metadata_1=[$5])
      +- LogicalFilter(condition=[=($0, 123)])
         +- LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], type=[$4], metadata_1=[$5], metadata_2=[$6])
            +- LogicalTableScan(table=[[default_catalog, default_database, inventory_meta, metadata=[metadata_1, metadata_2]]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1])
   +- Exchange(distribution=[hash[name, type]])
      +- TableSourceScan(table=[[default_catalog, default_database, inventory_meta, filter=[=(id, 123:BIGINT)], project=[name, type, amount], metadata=[metadata_1], aggregates=[grouping=[name,type], aggFunctions=[LongSumAggFunction(amount),LongMaxAggFunction(metadata_1)]]]], fields=[name, type, sum$0, max$1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalAggWithPartition">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  type,
  name
FROM inventory_part
  where type in ('a', 'b') and id = 123
  group by type, name]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], type=[$0], name=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(type=[$4], name=[$1], amount=[$2])
      +- LogicalFilter(condition=[AND(OR(=($4, _UTF-16LE'a'), =($4, _UTF-16LE'b')), =($0, 123))])
         +- LogicalTableScan(table=[[default_catalog, default_database, inventory_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, type, name])
+- HashAggregate(isMerge=[true], groupBy=[type, name], select=[type, name, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[type, name]])
      +- TableSourceScan(table=[[default_catalog, default_database, inventory_part, partitions=[{type=a}, {type=b}], filter=[=(id, 123:BIGINT)], project=[type, name, amount], metadata=[], aggregates=[grouping=[type,name], aggFunctions=[LongSumAggFunction(amount)]]]], fields=[type, name, sum$0])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalHashAggWithoutGroup">
    <Resource name="sql">
      <![CDATA[SELECT
  min(id),
  max(amount),
  sum(price),
  avg(price),
  count(id)
FROM inventory]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[MIN($0)], EXPR$1=[MAX($1)], EXPR$2=[SUM($2)], EXPR$3=[AVG($2)], EXPR$4=[COUNT($0)])
+- LogicalProject(id=[$0], amount=[$2], price=[$3])
   +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashAggregate(isMerge=[true], select=[Final_MIN(min$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1, Final_SUM(sum$2) AS EXPR$2, Final_AVG(sum$3, count$4) AS EXPR$3, Final_COUNT(count$5) AS EXPR$4])
+- Exchange(distribution=[single])
   +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[id, amount, price], metadata=[], aggregates=[grouping=[], aggFunctions=[LongMinAggFunction(id),LongMaxAggFunction(amount),LongSumAggFunction(price),LongSum0AggFunction(price),CountAggFunction(price),CountAggFunction(id)]]]], fields=[min$0, max$1, sum$2, sum$3, count$4, count$5])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalAggWithoutProjectionPushDown">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM inventory_no_proj
  where id = 123
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalFilter(condition=[=($0, 123)])
         +- LogicalTableScan(table=[[default_catalog, default_database, inventory_no_proj]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[name, type]])
      +- TableSourceScan(table=[[default_catalog, default_database, inventory_no_proj, filter=[=(id, 123:BIGINT)], aggregates=[grouping=[name,type], aggFunctions=[LongSumAggFunction(amount)]]]], fields=[name, type, sum$0])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalSortAggWithoutSort">
    <Resource name="sql">
      <![CDATA[SELECT
  min(id),
  max(amount),
  sum(price),
  avg(price),
  count(id)
FROM inventory]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalAggregate(group=[{}], EXPR$0=[MIN($0)], EXPR$1=[MAX($1)], EXPR$2=[SUM($2)], EXPR$3=[AVG($2)], EXPR$4=[COUNT($0)])
+- LogicalProject(id=[$0], amount=[$2], price=[$3])
   +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
SortAggregate(isMerge=[true], select=[Final_MIN(min$0) AS EXPR$0, Final_MAX(max$1) AS EXPR$1, Final_SUM(sum$2) AS EXPR$2, Final_AVG(sum$3, count$4) AS EXPR$3, Final_COUNT(count$5) AS EXPR$4])
+- Exchange(distribution=[single])
   +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[id, amount, price], metadata=[], aggregates=[grouping=[], aggFunctions=[LongMinAggFunction(id),LongMaxAggFunction(amount),LongSumAggFunction(price),LongSum0AggFunction(price),CountAggFunction(price),CountAggFunction(id)]]]], fields=[min$0, max$1, sum$2, sum$3, count$4, count$5])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDisablePushDownLocalAgg">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM inventory
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- HashAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Exchange(distribution=[hash[name, type]])
      +- LocalHashAggregate(groupBy=[name, type], select=[name, type, Partial_SUM(amount) AS sum$0])
         +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, type, amount], metadata=[]]], fields=[name, type, amount])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownLocalSortAggWithSort">
    <Resource name="sql">
      <![CDATA[SELECT
  sum(amount),
  name,
  type
FROM inventory
  group by name, type]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(EXPR$0=[$2], name=[$0], type=[$1])
+- LogicalAggregate(group=[{0, 1}], EXPR$0=[SUM($2)])
   +- LogicalProject(name=[$1], type=[$4], amount=[$2])
      +- LogicalTableScan(table=[[default_catalog, default_database, inventory]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[EXPR$0, name, type])
+- SortAggregate(isMerge=[true], groupBy=[name, type], select=[name, type, Final_SUM(sum$0) AS EXPR$0])
   +- Sort(orderBy=[name ASC, type ASC])
      +- Exchange(distribution=[hash[name, type]])
         +- TableSourceScan(table=[[default_catalog, default_database, inventory, project=[name, type, amount], metadata=[], aggregates=[grouping=[name,type], aggFunctions=[LongSumAggFunction(amount)]]]], fields=[name, type, sum$0])
]]>
    </Resource>
  </TestCase>
</Root>
