<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testCompatibleInputTypes[[10] DECIMAL(10,2), DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(DECIMAL(10, 2) col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[11] FLOAT, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(FLOAT col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[12] CHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(CHAR(10) col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[13] VARCHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(VARCHAR(10) col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[14] STRING, STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(VARCHAR(2147483647) col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[1] INT, INT]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[2] BIGINT, BIGINT]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(BIGINT col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[3] DOUBLE, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(DOUBLE col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[4] STRING, STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(VARCHAR(2147483647) col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[5] BOOLEAN, BOOLEAN]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(BOOLEAN col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[6] TINYINT, SMALLINT]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(TINYINT col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[7] SMALLINT, INT]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(SMALLINT col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[8] INT, BIGINT]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleInputTypes[[9] BIGINT, DECIMAL(19,0)]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(BIGINT col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[10] regression, FLOAT, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'regression'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'regression')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$RegressionEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, FLOAT label, DOUBLE prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[11] embedding, ARRAY&#60;TINYINT&#62;, ARRAY&#60;FLOAT&#62;]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'embedding'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'embedding')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$EmbeddingEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, TINYINT ARRAY label, FLOAT ARRAY prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[12] embedding, ARRAY&#60;SMALLINT&#62;, ARRAY&#60;FLOAT&#62;]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'embedding'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'embedding')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$EmbeddingEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, SMALLINT ARRAY label, FLOAT ARRAY prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[13] embedding, ARRAY&#60;INT&#62;, ARRAY&#60;FLOAT&#62;]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'embedding'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'embedding')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$EmbeddingEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, INTEGER ARRAY label, FLOAT ARRAY prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[14] text_generation, CHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'text_generation'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'text_generation')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$TextGenerationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, CHAR(10) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[15] text_generation, VARCHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'text_generation'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'text_generation')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$TextGenerationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(10) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[1] classification, STRING, STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[2] embedding, ARRAY&#60;FLOAT&#62;, ARRAY&#60;FLOAT&#62;]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'embedding'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'embedding')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$EmbeddingEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, FLOAT ARRAY label, FLOAT ARRAY prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[3] regression, DOUBLE, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'regression'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'regression')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$RegressionEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, DOUBLE label, DOUBLE prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[4] text_generation, STRING, STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'text_generation'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'text_generation')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$TextGenerationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(2147483647) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[5] classification, CHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, CHAR(10) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[6] classification, VARCHAR(10), STRING]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, VARCHAR(10) label, VARCHAR(2147483647) prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[7] regression, TINYINT, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'regression'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'regression')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$RegressionEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, TINYINT label, DOUBLE prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[8] regression, SMALLINT, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'regression'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'regression')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$RegressionEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, SMALLINT label, DOUBLE prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testCompatibleOutputTypes[[9] regression, INT, DOUBLE]">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE TypeTable, MODEL TypeModel, DESCRIPTOR(label), DESCRIPTOR(col), 'regression'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'col'), _UTF-16LE'regression')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(col=[$0], label=[$1])
      +- LogicalTableScan(table=[[default_catalog, default_database, TypeTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$RegressionEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.TypeModel), DESCRIPTOR(_UTF-16LE'col'))], rowType=[RecordType(INTEGER col, INTEGER label, DOUBLE prediction)])
         +- TableSourceScan(table=[[default_catalog, default_database, TypeTable]], fields=[col, label])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testNamedArguments">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(INPUT => TABLE MyTable, MODEL => MODEL MyModel, LABEL => DESCRIPTOR(label), TASK => 'classification', ARGS => DESCRIPTOR(a, b)))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[$6])
      +- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($5, 1000:INTERVAL SECOND)])
         +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[PROCTIME()])
            +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'))], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, DECIMAL(10, 3) d, VARCHAR(2147483647) label, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, VARCHAR(2147483647) prediction)])
         +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
            +- Calc(select=[a, b, c, d, label, rowtime, PROCTIME() AS proctime])
               +- TableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, label, rowtime])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testOptionalNamedArgumentsWithTask">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(INPUT => TABLE MyTable, MODEL => MODEL MyModel, LABEL => DESCRIPTOR(label), ARGS => DESCRIPTOR(a, b), TASK => 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[$6])
      +- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($5, 1000:INTERVAL SECOND)])
         +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[PROCTIME()])
            +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'))], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, DECIMAL(10, 3) d, VARCHAR(2147483647) label, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, VARCHAR(2147483647) prediction)])
         +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
            +- Calc(select=[a, b, c, d, label, rowtime, PROCTIME() AS proctime])
               +- TableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, label, rowtime])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testOptionalNamedArgumentsWithTaskAndConfig">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(INPUT => TABLE MyTable, MODEL => MODEL MyModel, LABEL => DESCRIPTOR(label), ARGS => DESCRIPTOR(a, b), TASK => 'classification', CONFIG => MAP['metrics', 'accuracy,f1']))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'), _UTF-16LE'classification', MAP(_UTF-16LE'metrics', _UTF-16LE'accuracy,f1'))], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[$6])
      +- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($5, 1000:INTERVAL SECOND)])
         +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[PROCTIME()])
            +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'), MAP(_UTF-16LE'metrics', _UTF-16LE'accuracy,f1'))], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, DECIMAL(10, 3) d, VARCHAR(2147483647) label, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, VARCHAR(2147483647) prediction)])
         +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
            +- Calc(select=[a, b, c, d, label, rowtime, PROCTIME() AS proctime])
               +- TableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, label, rowtime])
]]>
	</Resource>
  </TestCase>
  <TestCase name="testSimple">
    <Resource name="sql">
      <![CDATA[SELECT *
FROM TABLE(ML_EVALUATE(TABLE MyTable, MODEL MyModel, DESCRIPTOR(label), DESCRIPTOR(a, b), 'classification'))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(result=[$0])
+- LogicalTableFunctionScan(invocation=[ML_EVALUATE(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'label'), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'), _UTF-16LE'classification')], rowType=[RecordType((VARCHAR(2147483647), DOUBLE) MAP result)])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[$6])
      +- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($5, 1000:INTERVAL SECOND)])
         +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], label=[$4], rowtime=[$5], proctime=[PROCTIME()])
            +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
		<![CDATA[
GroupAggregate(select=[*org.apache.flink.table.planner.functions.sql.ml.MLEvaluationAggregationFunction$ClassificationEvaluationFunction*(label, prediction) AS result])
+- Exchange(distribution=[single])
   +- Calc(select=[label, prediction])
      +- MLPredictTableFunction(invocation=[ML_PREDICT(TABLE(#0), Model(MODEL default_catalog.default_database.MyModel), DESCRIPTOR(_UTF-16LE'a', _UTF-16LE'b'))], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, DECIMAL(10, 3) d, VARCHAR(2147483647) label, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, VARCHAR(2147483647) prediction)])
         +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
            +- Calc(select=[a, b, c, d, label, rowtime, PROCTIME() AS proctime])
               +- TableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, label, rowtime])
]]>
	</Resource>
  </TestCase>
</Root>
