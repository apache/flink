<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testCannotPushDown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[>($3, 10)])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[>(price, 10)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDown3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2 OR amount < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[OR(>($2, 2), <($2, 10))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[IS NOT NULL(amount)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDown3WithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE amount > 2 OR amount < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[OR(>($2, 2), <($2, 10))])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price], where=[IS NOT NULL(amount)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownIn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE name IN ('Alice', 'Bob', 'Dave')]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[OR(=($0, _UTF-16LE'Alice'), =($0, _UTF-16LE'Bob'), =($0, _UTF-16LE'Dave'))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[SEARCH(name, Sarg[_UTF-16LE'Alice', _UTF-16LE'Bob', _UTF-16LE'Dave'])])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithCastConstant">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE price > cast(10.1 as int)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[>($3, CAST(10.1:DECIMAL(3, 1)):INTEGER NOT NULL)])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[>(price, 10)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCannotPushDownWithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[>($4, 10)])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price], where=[>(price, 10)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[>($2, 2)])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownWithCastConstant">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > cast(1.1 as int)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[>($2, CAST(1.1:DECIMAL(2, 1)):INTEGER NOT NULL)])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[>(amount, 1)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testCanPushDownWithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE amount > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[>($2, 2)])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFailureToPushFilterIntoSourceWithoutWatermarkPushdown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM WithWatermark WHERE LOWER(name) = 'foo']]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], event_time=[$1])
+- LogicalFilter(condition=[=(LOWER($0), _UTF-16LE'foo')])
   +- LogicalWatermarkAssigner(rowtime=[event_time], watermark=[-($1, 5000:INTERVAL SECOND)])
      +- LogicalTableScan(table=[[default_catalog, default_database, WithWatermark]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, event_time], where=[=(LOWER(name), 'foo')])
+- FlinkLogicalWatermarkAssigner(rowtime=[event_time], watermark=[-($1, 5000:INTERVAL SECOND)])
   +- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, WithWatermark]], fields=[name, event_time])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullyPushDown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2 AND amount < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[AND(>($2, 2), <($2, 10))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[and(>(amount, 2), <(amount, 10))]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullyPushDownWithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE amount > 2 AND amount < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[AND(>($2, 2), <($2, 10))])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[and(>(amount, 2), <(amount, 10))]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLowerUpperPushdown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MTable WHERE LOWER(a) = 'foo' AND UPPER(b) = 'bar']]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[AND(=(LOWER($0), _UTF-16LE'foo'), =(UPPER($1), _UTF-16LE'bar'))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MTable, filter=[and(=(LOWER(a), _UTF-16LE'foo':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"), =(UPPER(b), _UTF-16LE'bar':VARCHAR(2147483647) CHARACTER SET "UTF-16LE"))]]], fields=[a, b])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartialPushDown">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2 AND price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[AND(>($2, 2), >($3, 10))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[>(price, 10)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testWithInterval">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MTable
WHERE TIMESTAMPADD(HOUR, 5, a) >= b
OR
TIMESTAMPADD(YEAR, 2, b) >= a]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[OR(>=(+($0, *(3600000:INTERVAL HOUR, 5)), $1), >=(+($1, *(12:INTERVAL YEAR, 2)), $0))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[a, b], where=[OR(>=(+(a, *(3600000:INTERVAL DAY TO SECOND, 5)), b), >=(+(b, *(12:INTERVAL YEAR TO MONTH, 2)), a))])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MTable, filter=[]]], fields=[a, b])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartialPushDown2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2 OR price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[OR(>($2, 2), >($3, 10))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[OR(>(amount, 2), >(price, 10))])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartialPushDownWithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE amount > 2 AND price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[AND(>($2, 2), >($4, 10))])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price], where=[>(price, 10)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testUnconvertedExpression">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE
    amount > 2 AND id < 100 AND CAST(amount AS BIGINT) > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[AND(>($2, 2), <($1, 100), >(CAST($2):BIGINT, 10))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[AND(<(id, 100), >(CAST(amount AS BIGINT), 10))])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartialPushDown2WithVirtualColumn">
    <Resource name="sql">
      <![CDATA[SELECT * FROM VirtualTable WHERE amount > 2 OR price > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[$3], price=[$4])
+- LogicalFilter(condition=[OR(>($2, 2), >($4, 10))])
   +- LogicalProject(name=[$0], id=[$1], amount=[$2], virtualField=[+($2, 1)], price=[$3])
      +- LogicalTableScan(table=[[default_catalog, default_database, VirtualTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, +(amount, 1) AS virtualField, price], where=[OR(>(amount, 2), >(price, 10))])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, VirtualTable, filter=[]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testWithUdf">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable WHERE amount > 2 AND myUdf(amount) < 32]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(name=[$0], id=[$1], amount=[$2], price=[$3])
+- LogicalFilter(condition=[AND(>($2, 2), <(myUdf($2), 32))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[name, id, amount, price], where=[<(myUdf(amount), 32)])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable, filter=[>(amount, 2)]]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testWithNullLiteral">
    <Resource name="sql">
      <![CDATA[WITH MyView AS (SELECT CASE
  WHEN amount > 0 THEN name
  ELSE CAST(NULL AS STRING)
  END AS a
  FROM MyTable)
SELECT a FROM MyView WHERE a IS NOT NULL
]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0])
+- LogicalFilter(condition=[IS NOT NULL($0)])
   +- LogicalProject(a=[CASE(>($2, 0), $0, null:VARCHAR(2147483647) CHARACTER SET "UTF-16LE")])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
FlinkLogicalCalc(select=[CASE(>(amount, 0), name, null:VARCHAR(2147483647)) AS a], where=[IS NOT NULL(CASE(>(amount, 0), name, null:VARCHAR(2147483647)))])
+- FlinkLogicalTableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[name, id, amount, price])
]]>
    </Resource>
  </TestCase>
</Root>
