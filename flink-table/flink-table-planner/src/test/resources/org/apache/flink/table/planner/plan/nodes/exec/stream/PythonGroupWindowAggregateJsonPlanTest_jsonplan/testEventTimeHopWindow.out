{
  "flinkVersion" : "",
  "nodes" : [ {
    "id" : 1,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`MyTable`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "a",
              "dataType" : "INT NOT NULL"
            }, {
              "name" : "b",
              "dataType" : "BIGINT"
            }, {
              "name" : "c",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "rowtime",
              "kind" : "COMPUTED",
              "expression" : {
                "rexNode" : {
                  "kind" : "CALL",
                  "internalName" : "$TO_TIMESTAMP$1",
                  "operands" : [ {
                    "kind" : "INPUT_REF",
                    "inputIndex" : 2,
                    "type" : "VARCHAR(2147483647)"
                  } ],
                  "type" : "TIMESTAMP(3)"
                },
                "serializableString" : "TO_TIMESTAMP(`c`)"
              }
            }, {
              "name" : "proctime",
              "kind" : "COMPUTED",
              "expression" : {
                "rexNode" : {
                  "kind" : "CALL",
                  "internalName" : "$PROCTIME$1",
                  "operands" : [ ],
                  "type" : {
                    "type" : "TIMESTAMP_WITH_LOCAL_TIME_ZONE",
                    "nullable" : false,
                    "precision" : 3,
                    "kind" : "PROCTIME"
                  }
                },
                "serializableString" : "PROCTIME()"
              }
            } ],
            "watermarkSpecs" : [ {
              "rowtimeAttribute" : "rowtime",
              "expression" : {
                "rexNode" : {
                  "kind" : "CALL",
                  "syntax" : "SPECIAL",
                  "internalName" : "$-$1",
                  "operands" : [ {
                    "kind" : "INPUT_REF",
                    "inputIndex" : 3,
                    "type" : "TIMESTAMP(3)"
                  }, {
                    "kind" : "LITERAL",
                    "value" : "1000",
                    "type" : "INTERVAL SECOND(6) NOT NULL"
                  } ],
                  "type" : "TIMESTAMP(3)"
                },
                "serializableString" : "`rowtime` - INTERVAL '1' SECOND"
              }
            } ]
          },
          "partitionKeys" : [ ],
          "options" : {
            "connector" : "values"
          }
        }
      }
    },
    "outputType" : "ROW<`a` INT NOT NULL, `b` BIGINT, `c` VARCHAR(2147483647)>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c])",
    "inputProperties" : [ ]
  }, {
    "id" : 2,
    "type" : "stream-exec-calc_1",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : "BIGINT"
    }, {
      "kind" : "CALL",
      "internalName" : "$TO_TIMESTAMP$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 2,
        "type" : "VARCHAR(2147483647)"
      } ],
      "type" : "TIMESTAMP(3)"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : "INT NOT NULL"
    } ],
    "condition" : null,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b` BIGINT, `rowtime` TIMESTAMP(3), `a` INT NOT NULL>",
    "description" : "Calc(select=[b, TO_TIMESTAMP(c) AS rowtime, a])"
  }, {
    "id" : 3,
    "type" : "stream-exec-watermark-assigner_1",
    "watermarkExpr" : {
      "kind" : "CALL",
      "syntax" : "SPECIAL",
      "internalName" : "$-$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 1,
        "type" : "TIMESTAMP(3)"
      }, {
        "kind" : "LITERAL",
        "value" : "1000",
        "type" : "INTERVAL SECOND(6) NOT NULL"
      } ],
      "type" : "TIMESTAMP(3)"
    },
    "rowtimeFieldIndex" : 1,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : {
      "type" : "ROW",
      "fields" : [ {
        "name" : "b",
        "fieldType" : "BIGINT"
      }, {
        "name" : "rowtime",
        "fieldType" : {
          "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
          "precision" : 3,
          "kind" : "ROWTIME"
        }
      }, {
        "name" : "a",
        "fieldType" : "INT NOT NULL"
      } ]
    },
    "description" : "WatermarkAssigner(rowtime=[rowtime], watermark=[(rowtime - 1000:INTERVAL SECOND)])"
  }, {
    "id" : 4,
    "type" : "stream-exec-calc_1",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : "BIGINT"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : {
        "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
        "precision" : 3,
        "kind" : "ROWTIME"
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 2,
      "type" : "INT NOT NULL"
    }, {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$+$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 2,
        "type" : "INT NOT NULL"
      }, {
        "kind" : "LITERAL",
        "value" : 1,
        "type" : "INT NOT NULL"
      } ],
      "type" : "INT NOT NULL"
    } ],
    "condition" : null,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : {
      "type" : "ROW",
      "fields" : [ {
        "name" : "b",
        "fieldType" : "BIGINT"
      }, {
        "name" : "rowtime",
        "fieldType" : {
          "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
          "precision" : 3,
          "kind" : "ROWTIME"
        }
      }, {
        "name" : "a",
        "fieldType" : "INT NOT NULL"
      }, {
        "name" : "$f3",
        "fieldType" : "INT NOT NULL"
      } ]
    },
    "description" : "Calc(select=[b, rowtime, a, (a + 1) AS $f3])"
  }, {
    "id" : 5,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : {
      "type" : "ROW",
      "fields" : [ {
        "name" : "b",
        "fieldType" : "BIGINT"
      }, {
        "name" : "rowtime",
        "fieldType" : {
          "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
          "precision" : 3,
          "kind" : "ROWTIME"
        }
      }, {
        "name" : "a",
        "fieldType" : "INT NOT NULL"
      }, {
        "name" : "$f3",
        "fieldType" : "INT NOT NULL"
      } ]
    },
    "description" : "Exchange(distribution=[hash[b]])"
  }, {
    "id" : 6,
    "type" : "stream-exec-python-group-window-aggregate_1",
    "grouping" : [ 0 ],
    "aggCalls" : [ {
      "name" : "EXPR$1",
      "systemName" : "pyFunc",
      "argList" : [ 2, 3 ],
      "filterArg" : -1,
      "distinct" : false,
      "approximate" : false,
      "ignoreNulls" : false,
      "type" : "BIGINT"
    } ],
    "window" : {
      "kind" : "SLIDING",
      "alias" : {
        "name" : "w$",
        "type" : {
          "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
          "precision" : 3,
          "kind" : "ROWTIME"
        }
      },
      "timeField" : {
        "fieldName" : "rowtime",
        "fieldIndex" : 1,
        "inputIndex" : 0,
        "fieldType" : {
          "type" : "TIMESTAMP_WITHOUT_TIME_ZONE",
          "precision" : 3,
          "kind" : "ROWTIME"
        }
      },
      "isTimeWindow" : true,
      "size" : "PT10S",
      "slide" : "PT5S"
    },
    "namedWindowProperties" : [ ],
    "generateUpdateBefore" : false,
    "needRetraction" : false,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b` BIGINT, `EXPR$1` BIGINT>",
    "description" : "PythonGroupWindowAggregate(groupBy=[b], window=[SlidingGroupWindow('w$, rowtime, 10000, 5000)], select=[b, pyFunc(a, $f3) AS EXPR$1])"
  }, {
    "id" : 7,
    "type" : "stream-exec-sink_1",
    "configuration" : {
      "table.exec.sink.keyed-shuffle" : "AUTO",
      "table.exec.sink.not-null-enforcer" : "ERROR",
      "table.exec.sink.rowtime-inserter" : "ENABLED",
      "table.exec.sink.type-length-enforcer" : "IGNORE",
      "table.exec.sink.upsert-materialize" : "AUTO"
    },
    "dynamicTableSink" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`MySink`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "b",
              "dataType" : "BIGINT"
            }, {
              "name" : "c",
              "dataType" : "BIGINT"
            } ],
            "watermarkSpecs" : [ ]
          },
          "partitionKeys" : [ ],
          "options" : {
            "connector" : "values"
          }
        }
      }
    },
    "inputChangelogMode" : [ "INSERT" ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b` BIGINT, `EXPR$1` BIGINT>",
    "description" : "Sink(table=[default_catalog.default_database.MySink], fields=[b, EXPR$1])"
  } ],
  "edges" : [ {
    "source" : 1,
    "target" : 2,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 2,
    "target" : 3,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 3,
    "target" : 4,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 4,
    "target" : 5,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 5,
    "target" : 6,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 6,
    "target" : 7,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}
