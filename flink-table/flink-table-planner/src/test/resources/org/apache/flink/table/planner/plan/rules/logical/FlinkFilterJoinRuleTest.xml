<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testAntiJoin">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 WHERE (a1, b1, c1) NOT IN (select a2, b2, c2 FROM MyTable2 WHERE a2 = 2 AND b2 > 10) AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2])
+- LogicalFilter(condition=[AND(NOT(IN($0, $1, $2, {
LogicalProject(a2=[$2], b2=[$0], c2=[$1])
  LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
    LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
})), IS NOT NULL($2))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2])
+- LogicalJoin(condition=[AND(OR(IS NULL($0), IS NULL($3), =($0, $3)), OR(IS NULL($1), IS NULL($4), =($1, $4)), OR(IS NULL($2), IS NULL($5), =($2, $5)))], joinType=[anti])
   :- LogicalFilter(condition=[IS NOT NULL($2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalProject(a2=[$2], b2=[$0], c2=[$1])
      +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
         +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftAnti1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE a NOT IN (SELECT c FROM rightT WHERE c < 3)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[NOT(IN($0, {
LogicalProject(c=[$0])
  LogicalFilter(condition=[<($0, 3)])
    LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[OR(IS NULL($0), IS NULL($2), =($0, $2))], joinType=[anti])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject(c=[$0])
         +- LogicalFilter(condition=[<($0, 3)])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftAnti2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE NOT EXISTS (SELECT * FROM rightT where c > 10)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[NOT(EXISTS({
LogicalFilter(condition=[>($0, 10)])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[$2], joinType=[anti])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject($f0=[IS NOT NULL($0)])
         +- LogicalAggregate(group=[{}], m=[MIN($0)])
            +- LogicalProject(i=[true])
               +- LogicalFilter(condition=[>($0, 10)])
                  +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftAnti3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE a NOT IN (SELECT c FROM rightT WHERE b = d AND c < 3)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[NOT(IN($0, {
LogicalProject(c=[$0])
  LogicalFilter(condition=[AND(=($cor0.b, $1), <($0, 3))])
    LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[AND(OR(IS NULL($0), IS NULL($2), =($0, $2)), =($1, $3))], joinType=[anti])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject(c=[$0], d=[$1])
         +- LogicalFilter(condition=[<($0, 3)])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftAnti4">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE NOT EXISTS (SELECT * FROM rightT WHERE a = c)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[NOT(EXISTS({
LogicalFilter(condition=[=($cor0.a, $0)])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[=($0, $2)], joinType=[anti])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject(c=[$0])
         +- LogicalFilter(condition=[true])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftSemi1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE a IN (SELECT c FROM rightT)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[IN($0, {
LogicalProject(c=[$0])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[=($0, $2)], joinType=[semi])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject(c=[$0])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftSemi2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE EXISTS (SELECT * FROM rightT)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[EXISTS({
LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[true], joinType=[semi])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject($f0=[IS NOT NULL($0)])
         +- LogicalFilter(condition=[IS NOT NULL($0)])
            +- LogicalAggregate(group=[{}], m=[MIN($0)])
               +- LogicalProject(i=[true])
                  +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFilterPushDownLeftSemi3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM (SELECT * FROM leftT WHERE EXISTS (SELECT * FROM rightT WHERE a = c)) T WHERE T.b > 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[>($1, 2)])
   +- LogicalProject(a=[$0], b=[$1])
      +- LogicalFilter(condition=[EXISTS({
LogicalFilter(condition=[=($cor0.a, $0)])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})], variablesSet=[[$cor0]])
         +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[=($0, $2)], joinType=[semi])
      :- LogicalFilter(condition=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject(c=[$0])
         +- LogicalFilter(condition=[true])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoinWithSomeFiltersFromRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 FULL JOIN MyTable2 ON a1 = a2 AND b1 = b2 WHERE a2 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($5, 2)])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3))], joinType=[full])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3))], joinType=[right])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoinWithAllFilterInONClause">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 FULL JOIN MyTable2 ON a1 = a2 AND a1 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($0, 2))], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($0, 2))], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoinWithAllFiltersFromWhere">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable2, MyTable1 WHERE b1 = b2 AND c1 = c2 AND a2 = 2 AND b2 > 10 AND COALESCE(c1, c2) <> '' ]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(b2=[$0], c2=[$1], a2=[$2], a1=[$3], b1=[$4], c1=[$5])
+- LogicalFilter(condition=[AND(=($4, $0), =($5, $1), =($2, 2), >($0, 10), <>(COALESCE($5, $1), _UTF-16LE''))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(b2=[$0], c2=[$1], a2=[$2], a1=[$3], b1=[$4], c1=[$5])
+- LogicalJoin(condition=[AND(=($4, $0), =($5, $1), <>(COALESCE($5, $1), _UTF-16LE''))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
   +- LogicalFilter(condition=[>($1, 10)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoinWithSomeFiltersFromLeftRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 FULL JOIN MyTable2 ON a1 = a2 AND b1 = b2 AND c1 = c2 WHERE a2 = 2 AND b2 > 10 AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($5, 2), >($3, 10), IS NOT NULL($2))])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[full])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($0, 2), >($1, 10), IS NOT NULL($2))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10), IS NOT NULL($1))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullJoinWithSomeFiltersFromLeftSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 FULL JOIN MyTable2 ON a1 = a2 AND b1 = b2 WHERE a1 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($0, 2)])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3))], joinType=[full])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3))], joinType=[left])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithAllFilterFromBothSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 JOIN MyTable2 ON a1 = a2 WHERE a1 = a2 + 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($0, +($5, 2))])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($0, +($5, 2)))], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithAllFilterInONClause">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 JOIN MyTable2 ON a1 = a2 AND b1 = b2 AND a1 = 2 AND b2 > 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($0, 2), >($3, 10))], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($0, 2), >($1, 10))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(>($0, 10), =($2, 2))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithAllFiltersFromWhere">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable2, MyTable1 WHERE b1 = b2 AND c1 = c2 AND a2 = 2 AND b2 > 10 AND COALESCE(c1, c2) <> '' ]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(b2=[$0], c2=[$1], a2=[$2], a1=[$3], b1=[$4], c1=[$5])
+- LogicalFilter(condition=[AND(=($4, $0), =($5, $1), =($2, 2), >($0, 10), <>(COALESCE($5, $1), _UTF-16LE''))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(b2=[$0], c2=[$1], a2=[$2], a1=[$3], b1=[$4], c1=[$5])
+- LogicalJoin(condition=[AND(=($4, $0), =($5, $1), <>(COALESCE($5, $1), _UTF-16LE''))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
   +- LogicalFilter(condition=[>($1, 10)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 < 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 <> 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<>($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<>($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<>($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 > 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[>($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[>($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[>($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter4">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 >= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[>=($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[>=($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[>=($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter5">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 <= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<=($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<=($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<=($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithFilter6">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 = null]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($5, null)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalValues(tuples=[[]])
   +- LogicalValues(tuples=[[]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithNullFilter">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 IS NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($5)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[IS NULL($0)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[IS NULL($2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithNullFilter2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 INNER JOIN MyTable2 ON a1 = a2 WHERE a2 IS NULL AND a1 < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(IS NULL($5), <($0, 10))])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalValues(tuples=[[]])
   +- LogicalValues(tuples=[[]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithSomeFiltersFromLeftRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 JOIN MyTable2 ON a1 = a2 AND b1 = b2 AND c1 = c2 WHERE a2 = 2 AND b2 > 10 AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($5, 2), >($3, 10), IS NOT NULL($2))])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($0, 2), >($1, 10), IS NOT NULL($2))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10), IS NOT NULL($1))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithSomeFiltersFromLeftSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 JOIN MyTable2 ON a1 = a2 WHERE a1 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($0, 2)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithSomeFiltersFromRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 JOIN MyTable2 ON a1 = a2 WHERE a2 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($5, 2)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftAnti1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE a NOT IN (SELECT c FROM rightT WHERE b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[NOT(IN($0, {
LogicalProject(c=[$0])
  LogicalFilter(condition=[>($cor0.b, 2)])
    LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalJoin(condition=[AND(OR(IS NULL($0), IS NULL($2), =($0, $2)), >($1, 2))], joinType=[anti])
   :- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
   +- LogicalProject(c=[$0])
      +- LogicalFilter(condition=[true])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftAnti2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE NOT EXISTS (SELECT * FROM rightT WHERE b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[NOT(EXISTS({
LogicalFilter(condition=[>($cor0.b, 2)])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[$2], joinType=[anti])
      :- LogicalProject(a=[$0], b=[$1], $f2=[>($1, 2)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject
         +- LogicalFilter(condition=[true])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftAnti3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE a NOT IN (SELECT c FROM rightT WHERE b = d AND b > 1)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[NOT(IN($0, {
LogicalProject(c=[$0])
  LogicalFilter(condition=[AND(=($cor0.b, $1), >($cor0.b, 1))])
    LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalJoin(condition=[AND(OR(IS NULL($0), IS NULL($2), =($0, $2)), =($1, $3), >($1, 1))], joinType=[anti])
   :- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
   +- LogicalProject(c=[$0], d=[$1])
      +- LogicalFilter(condition=[true])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftAnti4">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE NOT EXISTS (SELECT * FROM rightT WHERE a = c AND b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[NOT(EXISTS({
LogicalFilter(condition=[AND(=($cor0.a, $0), >($cor0.b, 2))])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
}))], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalJoin(condition=[AND(=($0, $2), >($1, 2))], joinType=[anti])
   :- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
   +- LogicalProject(c=[$0])
      +- LogicalFilter(condition=[true])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftSemi1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE a IN (SELECT c FROM rightT WHERE b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[IN($0, {
LogicalProject(c=[$0])
  LogicalFilter(condition=[>($cor0.b, 2)])
    LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalJoin(condition=[=($0, $2)], joinType=[semi])
   :- LogicalFilter(condition=[>($1, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
   +- LogicalProject(c=[$0])
      +- LogicalFilter(condition=[true])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftSemi2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE EXISTS (SELECT * FROM rightT WHERE b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[EXISTS({
LogicalFilter(condition=[>($cor0.b, 2)])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalProject(a=[$0], b=[$1])
   +- LogicalJoin(condition=[true], joinType=[semi])
      :- LogicalProject(a=[$0], b=[$1], $f2=[>($1, 2)])
      :  +- LogicalFilter(condition=[>($1, 2)])
      :     +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
      +- LogicalProject
         +- LogicalFilter(condition=[true])
            +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionPushDownLeftSemi3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM leftT WHERE EXISTS (SELECT * FROM rightT WHERE a = c AND b > 2)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalFilter(condition=[EXISTS({
LogicalFilter(condition=[AND(=($cor0.a, $0), >($cor0.b, 2))])
  LogicalTableScan(table=[[default_catalog, default_database, rightT]])
})], variablesSet=[[$cor0]])
   +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a=[$0], b=[$1])
+- LogicalJoin(condition=[=($0, $2)], joinType=[semi])
   :- LogicalFilter(condition=[>($1, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, leftT]])
   +- LogicalProject(c=[$0])
      +- LogicalFilter(condition=[true])
         +- LogicalTableScan(table=[[default_catalog, default_database, rightT]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithAllFilterInONClause">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 AND a2 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($5, 2))], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithAllFiltersFromWhere">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON true WHERE b1 = b2 AND c1 = c2 AND a2 = 2 AND b2 > 10 AND COALESCE(c1, c2) <> '' ]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($1, $3), =($2, $4), =($5, 2), >($3, 10), <>(COALESCE($2, $4), _UTF-16LE''))])
   +- LogicalJoin(condition=[true], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($1, $3), =($2, $4), <>(COALESCE($2, $4), _UTF-16LE''))], joinType=[inner])
   :- LogicalFilter(condition=[>($1, 10)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithAllFilterInONClause">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON a1 = a2 AND a1 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($0, 2))], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[right])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter1">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 < 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 <> 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<>($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<>($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<>($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter3">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 > 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[>($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[>($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[>($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter4">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 >= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[>=($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[>=($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[>=($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter5">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 <= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[<=($5, 1)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
   :- LogicalFilter(condition=[<=($0, 1)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[<=($2, 1)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithFilter6">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 = null]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($5, null)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[left])
   :- LogicalValues(tuples=[[]])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithNullFilterInRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 IS NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($5)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($5)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithNullFilterInRightSide2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a2 IS NULL AND a1 < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(IS NULL($5), <($0, 10))])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($5)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalFilter(condition=[<($0, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalFilter(condition=[<($2, 10)])
         +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithSomeFiltersFromLeftRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 AND b1 = b2 AND c1 = c2 WHERE a2 = 2 AND b2 > 10 AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($5, 2), >($3, 10), IS NOT NULL($2))])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($0, 2), >($1, 10), IS NOT NULL($2))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10), IS NOT NULL($1))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftJoinWithSomeFiltersFromLeftSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 LEFT JOIN MyTable2 ON a1 = a2 WHERE a1 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($0, 2)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[left])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithNullFilterInRightSide2">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON a1 = a2 WHERE a1 IS NULL AND a2 < 10]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(IS NULL($0), <($5, 10))])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($0)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[right])
      :- LogicalFilter(condition=[<($0, 10)])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalFilter(condition=[<($2, 10)])
         +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithAllFiltersFromWhere">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON true WHERE b1 = b2 AND c1 = c2 AND a2 = 2 AND b2 > 10 AND COALESCE(c1, c2) <> '' ]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($1, $3), =($2, $4), =($5, 2), >($3, 10), <>(COALESCE($2, $4), _UTF-16LE''))])
   +- LogicalJoin(condition=[true], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($1, $3), =($2, $4), <>(COALESCE($2, $4), _UTF-16LE''))], joinType=[inner])
   :- LogicalFilter(condition=[>($1, 10)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithNullFilterInLeftSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON a1 = a2 WHERE a1 IS NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($0)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[IS NULL($0)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithSomeFiltersFromRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON a1 = a2 WHERE a2 = 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[=($5, 2)])
   +- LogicalJoin(condition=[=($0, $5)], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[=($0, $5)], joinType=[right])
   :- LogicalFilter(condition=[=($0, 2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[=($2, 2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightJoinWithSomeFiltersFromLeftRightSide">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 RIGHT JOIN MyTable2 ON a1 = a2 AND b1 = b2 AND c1 = c2 WHERE a2 = 2 AND b2 > 10 AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalFilter(condition=[AND(=($5, 2), >($3, 10), IS NOT NULL($2))])
   +- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[right])
      :- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2], b2=[$3], c2=[$4], a2=[$5])
+- LogicalJoin(condition=[AND(=($0, $5), =($1, $3), =($2, $4))], joinType=[inner])
   :- LogicalFilter(condition=[AND(=($0, 2), >($1, 10), IS NOT NULL($2))])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10), IS NOT NULL($1))])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSemiJoin">
    <Resource name="sql">
      <![CDATA[SELECT * FROM MyTable1 WHERE (a1, b1, c1) IN (SELECT a2, b2, c2 FROM MyTable2 WHERE a2 = 2 AND b2 > 10) AND c1 IS NOT NULL]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2])
+- LogicalFilter(condition=[AND(IN($0, $1, $2, {
LogicalProject(a2=[$2], b2=[$0], c2=[$1])
  LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
    LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
}), IS NOT NULL($2))])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], c1=[$2])
+- LogicalJoin(condition=[AND(=($0, $3), =($1, $4), =($2, $5))], joinType=[semi])
   :- LogicalFilter(condition=[IS NOT NULL($2)])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, MyTable1]])
   +- LogicalProject(a2=[$2], b2=[$0], c2=[$1])
      +- LogicalFilter(condition=[AND(=($2, 2), >($0, 10))])
         +- LogicalTableScan(table=[[default_catalog, default_database, MyTable2]])
]]>
    </Resource>
  </TestCase>
</Root>
