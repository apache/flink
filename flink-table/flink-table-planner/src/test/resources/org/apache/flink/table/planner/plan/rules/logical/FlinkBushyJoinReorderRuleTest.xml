<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testBushyJoinReorderWithBushyTree">
    <Resource name="sql">
      <![CDATA[SELECT tab2.d4, tab2.c3, tab1.d2, tab1.d1 FROM (SELECT * FROM T1 JOIN T2 ON T1.b1 = T2.b2) tab1 JOIN (SELECT * FROM T3 JOIN T4 ON T3.b3 = T4.b4) tab2 ON tab1.b2 = tab2.b4]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$16], c3=[$12], d2=[$8], d1=[$3])
+- LogicalJoin(condition=[=($6, $14)], joinType=[inner])
   :- LogicalProject(a1=[$0], b1=[$1], c1=[$2], d1=[$3], e1=[$4], a2=[$5], b2=[$6], c2=[$7], d2=[$8], e2=[$9])
   :  +- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :     :- LogicalTableScan(table=[[test_catalog, test_database, T1]])
   :     +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
   +- LogicalProject(a3=[$0], b3=[$1], c3=[$2], a4=[$3], b4=[$4], c4=[$5], d4=[$6], e4=[$7])
      +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
         :- LogicalTableScan(table=[[test_catalog, test_database, T3]])
         +- LogicalTableScan(table=[[test_catalog, test_database, T4]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[InnerJoin], where=[=(b2, b4)], select=[d1, b2, d2, c3, b4, d4], isBroadcast=[true], build=[right])
   :- Calc(select=[d1, b2, d2])
   :  +- HashJoin(joinType=[InnerJoin], where=[=(b1, b2)], select=[b1, d1, b2, d2], isBroadcast=[true], build=[right])
   :     :- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
   :     +- Exchange(distribution=[broadcast])
   :        +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Exchange(distribution=[broadcast])
      +- Calc(select=[c3, b4, d4])
         +- HashJoin(joinType=[InnerJoin], where=[=(b3, b4)], select=[b3, c3, b4, d4], isBroadcast=[true], build=[right])
            :- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
            +- Exchange(distribution=[broadcast])
               +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithFullOuterJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 FULL OUTER JOIN T3 ON T4.b4 = T3.b3 FULL OUTER JOIN T2 ON T4.b4 = T2.b2 FULL OUTER JOIN T1 ON T4.b4 = T1.b1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalJoin(condition=[=($1, $14)], joinType=[full])
   :- LogicalJoin(condition=[=($1, $9)], joinType=[full])
   :  :- LogicalJoin(condition=[=($1, $6)], joinType=[full])
   :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
   :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
   :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
   +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[FullOuterJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], build=[left])
   :- Exchange(distribution=[hash[b4]])
   :  +- Calc(select=[b4, d4, c3, d2])
   :     +- HashJoin(joinType=[FullOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], build=[left])
   :        :- Exchange(distribution=[hash[b4]])
   :        :  +- Calc(select=[b4, d4, c3])
   :        :     +- HashJoin(joinType=[FullOuterJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], build=[left])
   :        :        :- Exchange(distribution=[hash[b4]])
   :        :        :  +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
   :        :        +- Exchange(distribution=[hash[b3]])
   :        :           +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :        +- Exchange(distribution=[hash[b2]])
   :           +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Exchange(distribution=[hash[b1]])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithInnerAndFullOuterJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 JOIN T3 ON T4.b4 = T3.b3 FULL OUTER JOIN T2 ON T4.b4 = T2.b2 JOIN T1 ON T4.b4 = T1.b1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalJoin(condition=[=($1, $14)], joinType=[inner])
   :- LogicalJoin(condition=[=($1, $9)], joinType=[full])
   :  :- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
   :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
   :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
   +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[InnerJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], isBroadcast=[true], build=[left])
   :- Exchange(distribution=[broadcast])
   :  +- Calc(select=[b4, d4, c3, d2])
   :     +- HashJoin(joinType=[FullOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], build=[left])
   :        :- Exchange(distribution=[hash[b4]])
   :        :  +- Calc(select=[b4, d4, c3])
   :        :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[left])
   :        :        :- Exchange(distribution=[broadcast])
   :        :        :  +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
   :        :        +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :        +- Exchange(distribution=[hash[b2]])
   :           +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithInnerAndLeftOuterJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 JOIN T3 ON T4.b4 = T3.b3 LEFT OUTER JOIN T2 ON T4.b4 = T2.b2 JOIN T1 ON T4.b4 = T1.b1 WHERE T4.a4 < 3]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<($0, 3)])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[left])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, d1, b2, d2], isBroadcast=[true], build=[right])
   :- Calc(select=[b4, d4, c3, d1])
   :  +- HashJoin(joinType=[InnerJoin], where=[=(b4, b1)], select=[b4, d4, c3, b1, d1], isBroadcast=[true], build=[left])
   :     :- Exchange(distribution=[broadcast])
   :     :  +- Calc(select=[b4, d4, c3])
   :     :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[left])
   :     :        :- Exchange(distribution=[broadcast])
   :     :        :  +- Calc(select=[b4, d4], where=[<(a4, 3)])
   :     :        :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, b4, d4], metadata=[]]], fields=[a4, b4, d4])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
   +- Exchange(distribution=[broadcast])
      +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithInnerJoinAndTrueCondition">
    <Resource name="sql">
      <![CDATA[SELECT tab1.d4, tab1.c3, T2.d2, T1.d1 FROM T1, (SELECT * FROM T3 JOIN T4 ON T4.b4 = T3.b3) tab1, T2 WHERE tab1.a4 <= 1 AND tab1.a3 <= 1 AND T2.a2 <= 1 AND T1.a1 <= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$11], c3=[$7], d2=[$16], d1=[$3])
+- LogicalFilter(condition=[AND(<=($8, 1), <=($5, 1), <=($13, 1), <=($0, 1))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[test_catalog, test_database, T1]])
      :  +- LogicalProject(a3=[$0], b3=[$1], c3=[$2], a4=[$3], b4=[$4], c4=[$5], d4=[$6], e4=[$7])
      :     +- LogicalJoin(condition=[=($4, $1)], joinType=[inner])
      :        :- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :        +- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[c3, d4, d1, d2], build=[right])
   :- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[c3, d4, d1], build=[left])
   :  :- Exchange(distribution=[broadcast])
   :  :  +- Calc(select=[c3, d4])
   :  :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b3, c3, b4, d4], isBroadcast=[true], build=[right])
   :  :        :- Calc(select=[b3, c3], where=[<=(a3, 1)])
   :  :        :  +- TableSourceScan(table=[[test_catalog, test_database, T3, filter=[]]], fields=[a3, b3, c3])
   :  :        +- Exchange(distribution=[broadcast])
   :  :           +- Calc(select=[b4, d4], where=[<=(a4, 1)])
   :  :              +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, b4, d4], metadata=[]]], fields=[a4, b4, d4])
   :  +- Calc(select=[d1], where=[<=(a1, 1)])
   :     +- TableSourceScan(table=[[test_catalog, test_database, T1, filter=[], project=[a1, d1], metadata=[]]], fields=[a1, d1])
   +- Exchange(distribution=[broadcast])
      +- Calc(select=[d2], where=[<=(a2, 1)])
         +- TableSourceScan(table=[[test_catalog, test_database, T2, filter=[], project=[a2, d2], metadata=[]]], fields=[a2, d2])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithInnerJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 JOIN T3 ON T4.b4 = T3.b3 JOIN T2 ON T4.b4 = T2.b2 JOIN T1 ON T4.b4 = T1.b1 WHERE T1.a1 > 0 AND T3.a3 > 0]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[AND(>($13, 0), >($5, 0))])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[inner])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[InnerJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], isBroadcast=[true], build=[left])
   :- Exchange(distribution=[broadcast])
   :  +- Calc(select=[b4, d4, c3, d2])
   :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], isBroadcast=[true], build=[left])
   :        :- Exchange(distribution=[broadcast])
   :        :  +- Calc(select=[b4, d4, c3])
   :        :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[left])
   :        :        :- Exchange(distribution=[broadcast])
   :        :        :  +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
   :        :        +- Calc(select=[b3, c3], where=[>(a3, 0)])
   :        :           +- TableSourceScan(table=[[test_catalog, test_database, T3, filter=[]]], fields=[a3, b3, c3])
   :        +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Calc(select=[b1, d1], where=[>(a1, 0)])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, filter=[], project=[a1, b1, d1], metadata=[]]], fields=[a1, b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithLeftOuterJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 LEFT OUTER JOIN T3 ON T4.b4 = T3.b3 LEFT OUTER JOIN T2 ON T4.b4 = T2.b2 LEFT OUTER JOIN T1 ON T4.b4 = T1.b1 WHERE T4.a4 < 3]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<($0, 3)])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[left])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[left])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[left])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], build=[left])
   :- Calc(select=[b4, d4, c3, d2])
   :  +- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], isBroadcast=[true], build=[right])
   :     :- Calc(select=[b4, d4, c3])
   :     :  +- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[right])
   :     :     :- Exchange(distribution=[hash[b4]])
   :     :     :  +- Calc(select=[b4, d4], where=[<(a4, 3)])
   :     :     :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, b4, d4], metadata=[]]], fields=[a4, b4, d4])
   :     :     +- Exchange(distribution=[broadcast])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     +- Exchange(distribution=[broadcast])
   :        +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Exchange(distribution=[hash[b1]])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithMixedJoinTypeAndCondition">
    <Resource name="sql">
      <![CDATA[SELECT tab2.d4, tab2.c3, tab2.d2, T1.d1 FROM T1, (SELECT * FROM T4 LEFT OUTER JOIN T3 ON T4.b4 = T3.b3 JOIN T2 ON T4.b4 = T2.b2) tab2 WHERE tab2.a2 <= 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$8], c3=[$12], d2=[$16], d1=[$3])
+- LogicalFilter(condition=[<=($13, 2)])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[test_catalog, test_database, T1]])
      +- LogicalProject(a4=[$0], b4=[$1], c4=[$2], d4=[$3], e4=[$4], a3=[$5], b3=[$6], c3=[$7], a2=[$8], b2=[$9], c2=[$10], d2=[$11], e2=[$12])
         +- LogicalJoin(condition=[=($1, $9)], joinType=[inner])
            :- LogicalJoin(condition=[=($1, $6)], joinType=[left])
            :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
            :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
            +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, d2, c3, d1], build=[left])
   :- Exchange(distribution=[broadcast])
   :  +- Calc(select=[d4, d2, c3])
   :     +- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b3)], select=[b4, d4, d2, b3, c3], isBroadcast=[true], build=[right])
   :        :- Calc(select=[b4, d4, d2])
   :        :  +- HashJoin(joinType=[InnerJoin], where=[=(b4, b2)], select=[b4, d4, b2, d2], isBroadcast=[true], build=[left])
   :        :     :- Exchange(distribution=[broadcast])
   :        :     :  +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
   :        :     +- Calc(select=[b2, d2], where=[<=(a2, 2)])
   :        :        +- TableSourceScan(table=[[test_catalog, test_database, T2, filter=[], project=[a2, b2, d2], metadata=[]]], fields=[a2, b2, d2])
   :        +- Exchange(distribution=[broadcast])
   :           +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[d1], metadata=[]]], fields=[d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithRightOuterJoin">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 RIGHT OUTER JOIN T3 ON T4.b4 = T3.b3 JOIN T2 ON T3.b3 = T2.b2 JOIN T1 ON T2.b2 = T1.b1 WHERE T2.a2 <= 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<=($8, 2)])
   +- LogicalJoin(condition=[=($9, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[right])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b3)], select=[b3, c3, d2, d1, b4, d4], isBroadcast=[true], build=[right])
   :- Calc(select=[b3, c3, d2, d1])
   :  +- HashJoin(joinType=[InnerJoin], where=[=(b2, b1)], select=[b3, c3, b2, d2, b1, d1], isBroadcast=[true], build=[left])
   :     :- Exchange(distribution=[broadcast])
   :     :  +- HashJoin(joinType=[InnerJoin], where=[=(b3, b2)], select=[b3, c3, b2, d2], isBroadcast=[true], build=[left])
   :     :     :- Exchange(distribution=[broadcast])
   :     :     :  +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     :     +- Calc(select=[b2, d2], where=[<=(a2, 2)])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T2, filter=[], project=[a2, b2, d2], metadata=[]]], fields=[a2, b2, d2])
   :     +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
   +- Exchange(distribution=[broadcast])
      +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testBushyJoinReorderWithTrueCondition">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4, T3, T2, T1 WHERE T4.a4 <= 1 AND T3.a3 <= 1 AND T2.a2 <= 1 AND T1.a1 <= 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[AND(<=($0, 1), <=($5, 1), <=($8, 1), <=($13, 1))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3, d2, d1], build=[right])
:- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3, d2], build=[right])
:  :- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3], build=[left])
:  :  :- Exchange(distribution=[broadcast])
:  :  :  +- Calc(select=[d4], where=[<=(a4, 1)])
:  :  :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, d4], metadata=[]]], fields=[a4, d4])
:  :  +- Calc(select=[c3], where=[<=(a3, 1)])
:  :     +- TableSourceScan(table=[[test_catalog, test_database, T3, filter=[], project=[a3, c3], metadata=[]]], fields=[a3, c3])
:  +- Exchange(distribution=[broadcast])
:     +- Calc(select=[d2], where=[<=(a2, 1)])
:        +- TableSourceScan(table=[[test_catalog, test_database, T2, filter=[], project=[a2, d2], metadata=[]]], fields=[a2, d2])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[d1], where=[<=(a1, 1)])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, filter=[], project=[a1, d1], metadata=[]]], fields=[a1, d1])
]]>
    </Resource>
  </TestCase>
</Root>
