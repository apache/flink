<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testAntiJoin">
    <Resource name="sql">
      <![CDATA[Select * from fact_part where not exists (select dim_date_sk from dim where dim.price < 500)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4])
+- LogicalFilter(condition=[NOT(EXISTS({
LogicalFilter(condition=[<($3, 500)])
  LogicalTableScan(table=[[testCatalog, test_database, dim]])
}))])
   +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[LeftAntiJoin], where=[$f0], select=[id, name, amount, price, fact_date_sk], build=[right], singleRowJoin=[true])
:- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[IS NOT NULL(m) AS $f0])
      +- HashAggregate(isMerge=[true], select=[Final_MIN(min$0) AS m])
         +- Exchange(distribution=[single])
            +- LocalHashAggregate(select=[Partial_MIN(i) AS min$0])
               +- Calc(select=[true AS i], where=[<(price, 500)])
                  +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price], metadata=[]]], fields=[price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testComplexCalcInFactSide">
    <Resource name="sql">
      <![CDATA[Select * from dim join (select fact_date_sk as fact_date_sk1, price + 1 as price1 from fact_part) t1 on t1.fact_date_sk1 = dim_date_sk and t1.price1 > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], fact_date_sk1=[$5], price1=[$6])
+- LogicalJoin(condition=[AND(=($5, $4), >($6, 200), <($3, 500))], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
   +- LogicalProject(fact_date_sk1=[$4], price1=[+($3, 1)])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk1, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, fact_date_sk1, price1], build=[right])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk1]])
   +- Calc(select=[fact_date_sk AS fact_date_sk1, +(price, 1) AS price1], where=[>(+(price, 1), 200)])
      +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[], project=[price, fact_date_sk], metadata=[]]], fields=[price, fact_date_sk])
         +- DynamicFilteringDataCollector(fields=[dim_date_sk])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testComplexDimSideWithAggInDimSide">
    <Resource name="sql">
      <![CDATA[Select * from fact_part join (select dim_date_sk, sum(dim.price) from dim where  dim.price < 500 group by dim_date_sk) dimSide on fact_part.fact_date_sk = dimSide.dim_date_sk]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], dim_date_sk=[$5], EXPR$1=[$6])
+- LogicalJoin(condition=[=($4, $5)], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
   +- LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
      +- LogicalProject(dim_date_sk=[$4], price=[$3])
         +- LogicalFilter(condition=[<($3, 500)])
            +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, dim_date_sk, EXPR$1], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
+- HashAggregate(isMerge=[true], groupBy=[dim_date_sk], select=[dim_date_sk, Final_SUM(sum$0) AS EXPR$1])
   +- Exchange(distribution=[hash[dim_date_sk]])
      +- LocalHashAggregate(groupBy=[dim_date_sk], select=[dim_date_sk, Partial_SUM(price) AS sum$0])
         +- Calc(select=[price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price, dim_date_sk], metadata=[]]], fields=[price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testComplexDimSideWithJoinInDimSide">
    <Resource name="sql">
      <![CDATA[Select * from fact_part join (select * from dim, sales, item where dim.id = sales.id and sales.id = item.id and dim.price < 500 and sales.price > 300) dimSide on fact_part.fact_date_sk = dimSide.dim_date_sk]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9], id00=[$10], amount00=[$11], price00=[$12], id1=[$13], amount1=[$14], price1=[$15])
+- LogicalJoin(condition=[=($4, $9)], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
   +- LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], amount0=[$6], price0=[$7], id1=[$8], amount1=[$9], price1=[$10])
      +- LogicalFilter(condition=[AND(=($0, $5), =($5, $8), <($3, 500), >($7, 300))])
         +- LogicalJoin(condition=[true], joinType=[inner])
            :- LogicalJoin(condition=[true], joinType=[inner])
            :  :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
            :  +- LogicalTableScan(table=[[testCatalog, test_database, sales]])
            +- LogicalTableScan(table=[[testCatalog, test_database, item]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk, id00, amount00, price00, id1, amount1, price1], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- HashJoin(joinType=[InnerJoin], where=[=(id0, id1)], select=[id, male, amount, price, dim_date_sk, id0, amount0, price0, id1, amount1, price1], build=[left])
      :- HashJoin(joinType=[InnerJoin], where=[=(id, id0)], select=[id, male, amount, price, dim_date_sk, id0, amount0, price0], build=[right])
      :  :- Exchange(distribution=[hash[id]])
      :  :  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      :  :     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
      :  +- Exchange(distribution=[hash[id]])
      :     +- Calc(select=[id, amount, price], where=[>(price, 300)])
      :        +- TableSourceScan(table=[[testCatalog, test_database, sales, filter=[]]], fields=[id, amount, price])
      +- Exchange(distribution=[hash[id]])
         +- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDimTableFilteringFieldsNotInJoinKey">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.id = dim.id and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($5, $0), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(id0, id)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[id]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[id]])
   +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDimTableWithFilterPushDown">
    <Resource name="sql">
      <![CDATA[Select * from fact_part join (Select * from dim) t1 on fact_part.fact_date_sk = dim_date_sk where t1.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[<($8, 500)])
   +- LogicalJoin(condition=[=($4, $9)], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4])
         +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDimTableWithoutFilter">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.price > 100]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), >($8, 100))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[right])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- TableSourceScan(table=[[testCatalog, test_database, dim]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 100)])
      +- TableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDimTableWithUnsuitableFilter">
    <Resource name="sql">
      <![CDATA[Select * from dim join fact_part on fact_part.fact_date_sk = dim.dim_date_sk where dim.id is not null]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[IS NOT NULL($0)])
   +- LogicalJoin(condition=[=($9, $4)], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[IS NOT NULL(id)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDPPFactorToReorderTableWithoutStats">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, item, dim where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.id = item.id and dim.id = item.id  and dim.price < 500 and dim.price > 300]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], amount0=[$6], price0=[$7], id1=[$8], male=[$9], amount1=[$10], price1=[$11], dim_date_sk=[$12])
+- LogicalFilter(condition=[AND(=($4, $12), =($0, $5), =($8, $5), <($11, 500), >($11, 300))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, item]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[id0 AS id, name, amount0 AS amount, price0 AS price, fact_date_sk, id AS id0, amount AS amount0, price AS price0, id00 AS id1, male, amount00 AS amount1, price00 AS price1, dim_date_sk])
+- HashJoin(joinType=[InnerJoin], where=[=(id, id0)], select=[id, amount, price, id0, name, amount0, price0, fact_date_sk, id00, male, amount00, price00, dim_date_sk], build=[right])
   :- Exchange(distribution=[hash[id]])
   :  +- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
   +- HashJoin(joinType=[InnerJoin], where=[AND(=(fact_date_sk, dim_date_sk), =(id0, id))], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
      :- Exchange(distribution=[hash[id]])
      :  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
      :     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
      :        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[SEARCH(price, Sarg[(300..500)])])
      :           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
      +- Exchange(distribution=[hash[id]])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[SEARCH(price, Sarg[(300..500)])])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDPPFactorToReorderTableWithStats">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, item, dim where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.id = item.id and dim.id = item.id  and dim.price < 500 and dim.price > 300]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], amount0=[$6], price0=[$7], id1=[$8], male=[$9], amount1=[$10], price1=[$11], dim_date_sk=[$12])
+- LogicalFilter(condition=[AND(=($4, $12), =($0, $5), =($8, $5), <($11, 500), >($11, 300))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, item]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[id0 AS id, name, amount0 AS amount, price0 AS price, fact_date_sk, id AS id0, amount AS amount0, price AS price0, id00 AS id1, male, amount00 AS amount1, price00 AS price1, dim_date_sk])
+- NestedLoopJoin(joinType=[InnerJoin], where=[=(id, id0)], select=[id, amount, price, id0, name, amount0, price0, fact_date_sk, id00, male, amount00, price00, dim_date_sk], build=[right])
   :- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
   +- Exchange(distribution=[broadcast])
      +- NestedLoopJoin(joinType=[InnerJoin], where=[AND(=(fact_date_sk, dim_date_sk), =(id0, id))], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
         :- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
         :  +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         :     +- Calc(select=[id, male, amount, price, dim_date_sk], where=[SEARCH(price, Sarg[(300..500)])])
         :        +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
         +- Exchange(distribution=[broadcast])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[SEARCH(price, Sarg[(300..500)])])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDPPFactorWithDimSideJoinKeyChanged">
    <Resource name="sql">
      <![CDATA[Select * from fact_part join item on fact_part.id = item.id join (select dim_date_sk + 1 as dim_date_sk, price from dim) dim1 on fact_part.fact_date_sk = dim1.dim_date_sk where dim1.price < 500 and dim1.price > 300]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], amount0=[$6], price0=[$7], dim_date_sk=[$8], price1=[$9])
+- LogicalFilter(condition=[AND(<($9, 500), >($9, 300))])
   +- LogicalJoin(condition=[=($4, $8)], joinType=[inner])
      :- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
      :  :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, item]])
      +- LogicalProject(dim_date_sk=[+($4, 1)], price=[$3])
         +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[id0 AS id, name, amount0 AS amount, price0 AS price, fact_date_sk, id AS id0, amount AS amount0, price AS price0, dim_date_sk, price00 AS price1])
+- HashJoin(joinType=[InnerJoin], where=[=(id0, id)], select=[id, amount, price, id0, name, amount0, price0, fact_date_sk, dim_date_sk, price00], build=[right])
   :- Exchange(distribution=[hash[id]])
   :  +- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
   +- Exchange(distribution=[hash[id]])
      +- HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, dim_date_sk, price0], build=[right])
         :- Exchange(distribution=[hash[fact_date_sk]])
         :  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
         :     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         :        +- Calc(select=[+(dim_date_sk, 1) AS dim_date_sk, price], where=[SEARCH(price, Sarg[(300..500)])])
         :           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price, dim_date_sk], metadata=[]]], fields=[price, dim_date_sk])
         +- Exchange(distribution=[hash[dim_date_sk]])
            +- Calc(select=[+(dim_date_sk, 1) AS dim_date_sk, price], where=[SEARCH(price, Sarg[(300..500)])])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price, dim_date_sk], metadata=[]]], fields=[price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDPPFactorWithFactSideJoinKeyChanged">
    <Resource name="sql">
      <![CDATA[Select * from (select fact_date_sk + 1 as fact_date_sk, id from fact_part) fact_part1 join item on fact_part1.id = item.id join dim on fact_part1.fact_date_sk = dim.dim_date_sk where dim.price < 500 and dim.price > 300]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(fact_date_sk=[$0], id=[$1], id0=[$2], amount=[$3], price=[$4], id1=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[AND(<($8, 500), >($8, 300))])
   +- LogicalJoin(condition=[=($0, $9)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $2)], joinType=[inner])
      :  :- LogicalProject(fact_date_sk=[+($4, 1)], id=[$0])
      :  :  +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, item]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[fact_date_sk, id0 AS id, id AS id0, amount, price, id00 AS id1, male, amount0, price0, dim_date_sk])
+- HashJoin(joinType=[InnerJoin], where=[=(id0, id)], select=[id, amount, price, fact_date_sk, id0, id00, male, amount0, price0, dim_date_sk], build=[right])
   :- Exchange(distribution=[hash[id]])
   :  +- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
   +- Exchange(distribution=[hash[id]])
      +- HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[fact_date_sk, id, id0, male, amount, price, dim_date_sk], build=[right])
         :- Exchange(distribution=[hash[fact_date_sk]])
         :  +- Calc(select=[+(fact_date_sk, 1) AS fact_date_sk, id])
         :     +- TableSourceScan(table=[[testCatalog, test_database, fact_part, project=[fact_date_sk, id], metadata=[]]], fields=[fact_date_sk, id])
         +- Exchange(distribution=[hash[dim_date_sk]])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[SEARCH(price, Sarg[(300..500)])])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDPPFactorWithJoinKeysNotIncludePartitionKeys">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, item, dim where fact_part.id = dim.id and fact_part.id = item.id and dim.id = item.id  and dim.price < 500 and dim.price > 300]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], amount0=[$6], price0=[$7], id1=[$8], male=[$9], amount1=[$10], price1=[$11], dim_date_sk=[$12])
+- LogicalFilter(condition=[AND(=($0, $8), =($0, $5), =($8, $5), <($11, 500), >($11, 300))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, item]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(id, id0)], select=[id, name, amount, price, fact_date_sk, id0, amount0, price0, id00, male, amount00, price00, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[id]])
:  +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
+- HashJoin(joinType=[InnerJoin], where=[=(id0, id)], select=[id, amount, price, id0, male, amount0, price0, dim_date_sk], build=[right])
   :- Exchange(distribution=[hash[id]])
   :  +- TableSourceScan(table=[[testCatalog, test_database, item]], fields=[id, amount, price])
   +- Exchange(distribution=[hash[id]])
      +- Calc(select=[id, male, amount, price, dim_date_sk], where=[AND(SEARCH(price, Sarg[(300..500)]), IS NOT NULL(id))])
         +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInLeftRule">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, dim where fact_part.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($4, $9), <($8, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:  +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:     +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:        +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInLeftWithCalcRule">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, dim where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($4, $9), >($3, 200), <($8, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 200)])
:  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
:     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInLeftWithExchangeAndCalcRule">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, dim where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($4, $9), >($3, 200), <($8, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 200)])
:     +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
:        +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:           +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:              +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInLeftWithExchangeRule">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, dim where fact_part.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($4, $9), <($8, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInRightRule">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[broadcast])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
   +- DynamicFilteringDataCollector(fields=[dim_date_sk])
      +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
         +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInRightWithCalcRule">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), >($8, 200), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[broadcast])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 200)])
   +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
      +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInRightWithExchangeAndCalcRule">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.fact_date_sk = dim.dim_date_sk and fact_part.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), >($8, 200), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 200)])
      +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
         +- DynamicFilteringDataCollector(fields=[dim_date_sk])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFactInRightWithExchangeRule">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
      +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDynamicFilteringFieldIsComputeColumnsInFactSide">
    <Resource name="sql">
      <![CDATA[Select * from dim join (select fact_date_sk, amount + 1 as amount from fact_part) t1 on fact_date_sk = dim_date_sk and t1.amount = dim.amount where dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], fact_date_sk=[$5], amount0=[$6])
+- LogicalFilter(condition=[<($3, 500)])
   +- LogicalJoin(condition=[AND(=($5, $4), =($6, $2))], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalProject(fact_date_sk=[$4], amount=[+($2, 1)])
         +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[AND(=(fact_date_sk, dim_date_sk), =(amount0, amount))], select=[id, male, amount, price, dim_date_sk, fact_date_sk, amount0], build=[left])
:- Exchange(distribution=[broadcast])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Calc(select=[fact_date_sk, +(amount, 1) AS amount])
   +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, project=[fact_date_sk, amount], metadata=[]]], fields=[fact_date_sk, amount])
      +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFactTableIsLegacySource">
    <Resource name="sql">
      <![CDATA[Select * from dim, legacy_source where legacy_source.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, legacy_source]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- TableSourceScan(table=[[testCatalog, test_database, legacy_source]], fields=[id, name, amount, price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFactTableIsNotPartitionTable">
    <Resource name="sql">
      <![CDATA[Select * from dim, none_part_fact where none_part_fact.fact_date_sk = dim.dim_date_sk and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($9, $4), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, none_part_fact]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- TableSourceScan(table=[[testCatalog, test_database, none_part_fact]], fields=[id, name, amount, price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoin">
    <Resource name="sql">
      <![CDATA[Select * from fact_part full outer join (select *  from dim where dim.price < 500) on fact_date_sk = dim_date_sk]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalJoin(condition=[=($4, $9)], joinType=[full])
   :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
   +- LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4])
      +- LogicalFilter(condition=[<($3, 500)])
         +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[FullOuterJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- TableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinKeyIsDynamicFilterFieldNotPartitionKey">
    <Resource name="sql">
      <![CDATA[Select * from dim, fact_part where fact_part.amount = dim.amount and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[AND(=($7, $2), <($3, 500))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(amount0, amount)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[amount]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[amount]])
   +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
      +- DynamicFilteringDataCollector(fields=[amount])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinWithFactInLeft">
    <Resource name="sql">
      <![CDATA[Select * from fact_part left outer join dim on fact_part.fact_date_sk = dim.dim_date_sk where dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9])
+- LogicalFilter(condition=[<($8, 500)])
   +- LogicalJoin(condition=[=($4, $9)], joinType=[left])
      :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOutJoinWithFactInRight">
    <Resource name="sql">
      <![CDATA[Select * from dim left outer join fact_part on fact_part.fact_date_sk = dim.dim_date_sk where dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk=[$9])
+- LogicalFilter(condition=[<($3, 500)])
   +- LogicalJoin(condition=[=($9, $4)], joinType=[left])
      :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[LeftOuterJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
      +- DynamicFilteringDataCollector(fields=[dim_date_sk])
         +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
            +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testMultiJoin">
    <Resource name="sql">
      <![CDATA[Select * from fact_part, dim, sales where fact_part.id = sales.id and fact_part.fact_date_sk = dim.dim_date_sk and dim.price < 500 and dim.amount > 100]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4], id0=[$5], male=[$6], amount0=[$7], price0=[$8], dim_date_sk=[$9], id1=[$10], amount1=[$11], price1=[$12])
+- LogicalFilter(condition=[AND(=($0, $10), =($4, $9), <($8, 500), >($7, 100))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
      :  +- LogicalTableScan(table=[[testCatalog, test_database, dim]])
      +- LogicalTableScan(table=[[testCatalog, test_database, sales]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(id, id1)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk, id1, amount1, price1], build=[left])
:- Exchange(distribution=[hash[id]])
:  +- HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk, id0, male, amount0, price0, dim_date_sk], build=[right])
:     :- Exchange(distribution=[hash[fact_date_sk]])
:     :  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:     :     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:     :        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[AND(<(price, 500), >(amount, 100))])
:     :           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
:     +- Exchange(distribution=[hash[dim_date_sk]])
:        +- Calc(select=[id, male, amount, price, dim_date_sk], where=[AND(<(price, 500), >(amount, 100))])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[id]])
   +- TableSourceScan(table=[[testCatalog, test_database, sales]], fields=[id, amount, price])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartitionKeysIsComputeColumnsInFactSide">
    <Resource name="sql">
      <![CDATA[Select * from dim join (select fact_date_sk + 1 as fact_date_sk1, price + 1 as price1 from fact_part) t1 on t1.fact_date_sk1 = dim_date_sk and t1.price1 > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], fact_date_sk1=[$5], price1=[$6])
+- LogicalJoin(condition=[AND(=($5, $4), >($6, 200), <($3, 500))], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
   +- LogicalProject(fact_date_sk1=[+($4, 1)], price1=[+($3, 1)])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk1, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, fact_date_sk1, price1], build=[right])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk1]])
   +- Calc(select=[+(fact_date_sk, 1) AS fact_date_sk1, +(price, 1) AS price1], where=[>(+(price, 1), 200)])
      +- TableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[], project=[price, fact_date_sk], metadata=[]]], fields=[price, fact_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartitionKeysNameIsChangedInFactSide">
    <Resource name="sql">
      <![CDATA[Select * from dim join (select id, name, amount, price, fact_date_sk as fact_date_sk1 from fact_part) t1 on t1.fact_date_sk1 = dim_date_sk and t1.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], id0=[$5], name=[$6], amount0=[$7], price0=[$8], fact_date_sk1=[$9])
+- LogicalJoin(condition=[AND(=($9, $4), >($8, 200), <($3, 500))], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
   +- LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk1=[$4])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, id0, name, amount0, price0, fact_date_sk], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- Calc(select=[id, name, amount, price, fact_date_sk], where=[>(price, 200)])
      +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
         +- DynamicFilteringDataCollector(fields=[dim_date_sk])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSemiJoin">
    <Resource name="sql">
      <![CDATA[Select * from fact_part where fact_part.fact_date_sk in (select dim_date_sk from dim where dim.price < 500)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], name=[$1], amount=[$2], price=[$3], fact_date_sk=[$4])
+- LogicalFilter(condition=[IN($4, {
LogicalProject(dim_date_sk=[$4])
  LogicalFilter(condition=[<($3, 500)])
    LogicalTableScan(table=[[testCatalog, test_database, dim]])
})])
   +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[LeftSemiJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, name, amount, price, fact_date_sk], build=[right])
:- Exchange(distribution=[hash[fact_date_sk]])
:  +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part]], fields=[id, name, amount, price, fact_date_sk])
:     +- DynamicFilteringDataCollector(fields=[dim_date_sk])
:        +- Calc(select=[dim_date_sk], where=[<(price, 500)])
:           +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price, dim_date_sk], metadata=[]]], fields=[price, dim_date_sk])
+- Exchange(distribution=[hash[dim_date_sk]])
   +- Calc(select=[dim_date_sk], where=[<(price, 500)])
      +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[], project=[price, dim_date_sk], metadata=[]]], fields=[price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testPartitionKeysOrderIsChangedInFactSide">
    <Resource name="sql">
      <![CDATA[Select * from dim join (select fact_date_sk, id, name, amount, price from fact_part) t1 on t1.fact_date_sk = dim_date_sk and t1.price > 200 and dim.price < 500]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(id=[$0], male=[$1], amount=[$2], price=[$3], dim_date_sk=[$4], fact_date_sk=[$5], id0=[$6], name=[$7], amount0=[$8], price0=[$9])
+- LogicalJoin(condition=[AND(=($5, $4), >($9, 200), <($3, 500))], joinType=[inner])
   :- LogicalTableScan(table=[[testCatalog, test_database, dim]])
   +- LogicalProject(fact_date_sk=[$4], id=[$0], name=[$1], amount=[$2], price=[$3])
      +- LogicalTableScan(table=[[testCatalog, test_database, fact_part]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[=(fact_date_sk, dim_date_sk)], select=[id, male, amount, price, dim_date_sk, fact_date_sk, id0, name, amount0, price0], build=[left])
:- Exchange(distribution=[hash[dim_date_sk]])
:  +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
:     +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
+- Exchange(distribution=[hash[fact_date_sk]])
   +- Calc(select=[fact_date_sk, id, name, amount, price], where=[>(price, 200)])
      +- DynamicFilteringTableSourceScan(table=[[testCatalog, test_database, fact_part, filter=[]]], fields=[id, name, amount, price, fact_date_sk])
         +- DynamicFilteringDataCollector(fields=[dim_date_sk])
            +- Calc(select=[id, male, amount, price, dim_date_sk], where=[<(price, 500)])
               +- TableSourceScan(table=[[testCatalog, test_database, dim, filter=[]]], fields=[id, male, amount, price, dim_date_sk])
]]>
    </Resource>
  </TestCase>
</Root>
