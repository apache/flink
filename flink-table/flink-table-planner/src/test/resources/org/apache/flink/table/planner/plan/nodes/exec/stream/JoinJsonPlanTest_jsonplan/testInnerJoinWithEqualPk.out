{
  "flinkVersion" : "",
  "nodes" : [ {
    "id" : 1,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`A`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "a1",
              "dataType" : "INT"
            }, {
              "name" : "a2",
              "dataType" : "BIGINT"
            }, {
              "name" : "a3",
              "dataType" : "BIGINT"
            } ],
            "watermarkSpecs" : [ ]
          },
          "partitionKeys" : [ ],
          "options" : {
            "connector" : "values",
            "bounded" : "false"
          }
        }
      },
      "abilities" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`a1` INT, `a2` BIGINT> NOT NULL"
      }, {
        "type" : "ReadingMetadata",
        "metadataKeys" : [ ],
        "producedType" : "ROW<`a1` INT, `a2` BIGINT> NOT NULL"
      } ]
    },
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, A, project=[a1, a2], metadata=[]]], fields=[a1, a2])",
    "inputProperties" : [ ]
  }, {
    "id" : 2,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "Exchange(distribution=[hash[a1]])"
  }, {
    "id" : 3,
    "type" : "stream-exec-group-aggregate_1",
    "configuration" : {
      "table.exec.mini-batch.enabled" : "false",
      "table.exec.mini-batch.size" : "-1"
    },
    "grouping" : [ 0 ],
    "aggCalls" : [ ],
    "aggCallNeedRetractions" : [ ],
    "generateUpdateBefore" : true,
    "needRetraction" : false,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT>",
    "description" : "GroupAggregate(groupBy=[a1], select=[a1])"
  }, {
    "id" : 4,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT>",
    "description" : "Exchange(distribution=[hash[a1]])"
  }, {
    "id" : 5,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`B`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "b1",
              "dataType" : "INT"
            }, {
              "name" : "b2",
              "dataType" : "BIGINT"
            }, {
              "name" : "b3",
              "dataType" : "BIGINT"
            } ],
            "watermarkSpecs" : [ ]
          },
          "partitionKeys" : [ ],
          "options" : {
            "connector" : "values",
            "bounded" : "false"
          }
        }
      },
      "abilities" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`b1` INT, `b2` BIGINT> NOT NULL"
      }, {
        "type" : "ReadingMetadata",
        "metadataKeys" : [ ],
        "producedType" : "ROW<`b1` INT, `b2` BIGINT> NOT NULL"
      } ]
    },
    "outputType" : "ROW<`b1` INT, `b2` BIGINT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, B, project=[b1, b2], metadata=[]]], fields=[b1, b2])",
    "inputProperties" : [ ]
  }, {
    "id" : 6,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT, `b2` BIGINT>",
    "description" : "Exchange(distribution=[hash[b1]])"
  }, {
    "id" : 7,
    "type" : "stream-exec-group-aggregate_1",
    "configuration" : {
      "table.exec.mini-batch.enabled" : "false",
      "table.exec.mini-batch.size" : "-1"
    },
    "grouping" : [ 0 ],
    "aggCalls" : [ ],
    "aggCallNeedRetractions" : [ ],
    "generateUpdateBefore" : true,
    "needRetraction" : false,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT>",
    "description" : "GroupAggregate(groupBy=[b1], select=[b1])"
  }, {
    "id" : 8,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT>",
    "description" : "Exchange(distribution=[hash[b1]])"
  }, {
    "id" : 9,
    "type" : "stream-exec-join_1",
    "joinSpec" : {
      "joinType" : "INNER",
      "leftKeys" : [ 0 ],
      "rightKeys" : [ 0 ],
      "filterNulls" : [ true ],
      "nonEquiCondition" : null
    },
    "leftUpsertKeys" : [ [ 0 ] ],
    "rightUpsertKeys" : [ [ 0 ] ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    }, {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `b1` INT>",
    "description" : "Join(joinType=[InnerJoin], where=[(a1 = b1)], select=[a1, b1], leftInputSpec=[JoinKeyContainsUniqueKey], rightInputSpec=[JoinKeyContainsUniqueKey])"
  }, {
    "id" : 10,
    "type" : "stream-exec-sink_1",
    "configuration" : {
      "table.exec.sink.keyed-shuffle" : "AUTO",
      "table.exec.sink.not-null-enforcer" : "ERROR",
      "table.exec.sink.type-length-enforcer" : "IGNORE",
      "table.exec.sink.upsert-materialize" : "AUTO"
    },
    "dynamicTableSink" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`MySink`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "a1",
              "dataType" : "INT"
            }, {
              "name" : "b1",
              "dataType" : "INT"
            } ],
            "watermarkSpecs" : [ ]
          },
          "partitionKeys" : [ ],
          "options" : {
            "sink-insert-only" : "false",
            "table-sink-class" : "DEFAULT",
            "connector" : "values"
          }
        }
      }
    },
    "inputChangelogMode" : [ "INSERT", "UPDATE_BEFORE", "UPDATE_AFTER" ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `b1` INT>",
    "inputUpsertKey" : [ 0 ],
    "description" : "Sink(table=[default_catalog.default_database.MySink], fields=[a1, b1])"
  } ],
  "edges" : [ {
    "source" : 1,
    "target" : 2,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 2,
    "target" : 3,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 3,
    "target" : 4,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 5,
    "target" : 6,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 6,
    "target" : 7,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 7,
    "target" : 8,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 4,
    "target" : 9,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 8,
    "target" : 9,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 9,
    "target" : 10,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}