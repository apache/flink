<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testFilterJoinRule">
    <Resource name="ast">
      <![CDATA[
LogicalFilter(condition=[>=($0, 0)])
+- LogicalProject(c1=[org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50($2, org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50($2, $5))])
   +- LogicalJoin(condition=[=($1, $4)], joinType=[left])
      :- LogicalTableScan(table=[[default_catalog, default_database, Table1, source: [TestTableSource(a, b, c)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, Table2, source: [TestTableSource(d, e, f)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50(c, org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50(c, f)) AS c1], where=[(org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50(c, org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50(c, f)) >= 0)])
+- HashJoin(joinType=[LeftOuterJoin], where=[(b = e)], select=[b, c, e, f], build=[right])
   :- Exchange(distribution=[hash[b]])
   :  +- Calc(select=[b, c])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table1, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[e]])
      +- Calc(select=[e, f])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table2, source: [TestTableSource(d, e, f)]]], fields=[d, e, f])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoinEquiAndLocalPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[AND(=($0, $5), <($1, 2))], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[FullOuterJoin], where=[((a = z) AND (b < 2))], select=[a, b, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[y, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoinEquiAndNonEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[AND(=($0, $5), <($1, $3))], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[FullOuterJoin], where=[((a = z) AND (b < x))], select=[a, b, x, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoinEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[=($0, $5)], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[FullOuterJoin], where=[(a = z)], select=[a, b, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[y, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinEquiAndLocalPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[AND(=($0, $5), <($1, 2))], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[LeftOuterJoin], where=[((a = z) AND (b < 2))], select=[a, b, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[y, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinEquiAndNonEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[AND(=($0, $5), <($1, $3))], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[LeftOuterJoin], where=[((a = z) AND (b < x))], select=[a, b, x, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[=($0, $5)], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[LeftOuterJoin], where=[(a = z)], select=[a, b, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[y, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testNoEqualityJoinPredicate1">
    <Resource name="ast">
      <![CDATA[
LogicalProject(c=[$2], g=[$6])
+- LogicalFilter(condition=[=($3, $5)])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, Table3, source: [TestTableSource(a, b, c)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, Table5, source: [TestTableSource(d, e, f, g, h)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[c, g], build=[right])
:- Calc(select=[c])
:  +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table3, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
+- Exchange(distribution=[broadcast])
   +- Calc(select=[g], where=[(d = f)])
      +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table5, source: [TestTableSource(d, e, f, g, h)]]], fields=[d, e, f, g, h])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testNoEqualityJoinPredicate2">
    <Resource name="ast">
      <![CDATA[
LogicalProject(c=[$2], g=[$6])
+- LogicalFilter(condition=[<($0, $3)])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, Table3, source: [TestTableSource(a, b, c)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, Table5, source: [TestTableSource(d, e, f, g, h)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[c, g])
+- NestedLoopJoin(joinType=[InnerJoin], where=[(a < d)], select=[a, c, d, g], build=[left])
   :- Exchange(distribution=[broadcast])
   :  +- Calc(select=[a, c])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table3, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Calc(select=[d, g])
      +- LegacyTableSourceScan(table=[[default_catalog, default_database, Table5, source: [TestTableSource(d, e, f, g, h)]]], fields=[d, e, f, g, h])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiAndLocalPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], x=[$3])
+- LogicalJoin(condition=[AND(=($0, $5), <($3, 2))], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, x])
+- HashJoin(joinType=[RightOuterJoin], where=[((a = z) AND (x < 2))], select=[a, b, x, z], build=[right])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[x, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiAndNonEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[AND(=($0, $5), <($1, $3))], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[RightOuterJoin], where=[((a = z) AND (b < x))], select=[a, b, x, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinEquiPred">
    <Resource name="ast">
      <![CDATA[
LogicalProject(b=[$1], y=[$4])
+- LogicalJoin(condition=[=($0, $5)], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
Calc(select=[b, y])
+- HashJoin(joinType=[RightOuterJoin], where=[(a = z)], select=[a, b, y, z], build=[left])
   :- Exchange(distribution=[hash[a]])
   :  +- Calc(select=[a, b])
   :     +- LegacyTableSourceScan(table=[[default_catalog, default_database, T, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
   +- Exchange(distribution=[hash[z]])
      +- Calc(select=[y, z])
         +- LegacyTableSourceScan(table=[[default_catalog, default_database, S, source: [TestTableSource(x, y, z)]]], fields=[x, y, z])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testUDFInJoinCondition">
    <Resource name="ast">
      <![CDATA[
LogicalJoin(condition=[AND(=($1, $4), =(org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50($0, $3), 10))], joinType=[inner])
:- LogicalTableScan(table=[[default_catalog, default_database, left, source: [TestTableSource(a, b, c)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, right, source: [TestTableSource(d, e, f)]]])
]]>
    </Resource>
    <Resource name="optimized exec plan">
      <![CDATA[
HashJoin(joinType=[InnerJoin], where=[((b = e) AND (org$apache$flink$table$planner$plan$batch$table$JoinTest$Merger$$234a0810cc9eb576e09d551c1fe0de50(a, d) = 10))], select=[a, b, c, d, e, f], build=[right])
:- Exchange(distribution=[hash[b]])
:  +- LegacyTableSourceScan(table=[[default_catalog, default_database, left, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
+- Exchange(distribution=[hash[e]])
   +- LegacyTableSourceScan(table=[[default_catalog, default_database, right, source: [TestTableSource(d, e, f)]]], fields=[d, e, f])
]]>
    </Resource>
  </TestCase>
</Root>
