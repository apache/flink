<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testNameConflicts">
    <Resource name="sql">
      <![CDATA[SELECT * FROM QueryTable, LATERAL TABLE(
VECTOR_SEARCH(
    TABLE NameConflictTable, DESCRIPTOR(`score`), QueryTable.d, 10))]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[$5], a0=[$6], score=[$7], score0=[$8], score1=[$9], score2=[$10])
+- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
   :- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($4, 1000:INTERVAL SECOND)])
   :  +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[PROCTIME()])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, QueryTable]])
   +- LogicalTableFunctionScan(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'score'), $cor0.d, 10)], rowType=[RecordType(INTEGER a, FLOAT ARRAY score, FLOAT ARRAY score0, FLOAT ARRAY score1, DOUBLE score2)])
      +- LogicalProject(a=[$0], score=[$1], score0=[$2], score1=[$3])
         +- LogicalTableScan(table=[[default_catalog, default_database, NameConflictTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[a, b, c, d, rowtime, PROCTIME_MATERIALIZE(proctime) AS proctime, a0, score, score0, score1, score2])
+- Correlate(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'score'), $cor0.d, 10)], correlate=[table(VECTOR_SEARCH(TABLE(),DESCRIPTOR('score'),$cor0.d,10))], select=[a,b,c,d,rowtime,proctime,a0,score,score0,score1,score2], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, FLOAT ARRAY d, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, INTEGER a0, FLOAT ARRAY score, FLOAT ARRAY score0, FLOAT ARRAY score1, DOUBLE score2)], joinType=[INNER])
   +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
      +- Calc(select=[a, b, c, d, rowtime, PROCTIME() AS proctime])
         +- TableSourceScan(table=[[default_catalog, default_database, QueryTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testNamedArgument">
    <Resource name="sql">
      <![CDATA[SELECT * FROM QueryTable, LATERAL TABLE(
VECTOR_SEARCH(
    SEARCH_TABLE => TABLE VectorTable,
    COLUMN_TO_QUERY => QueryTable.d,
    COLUMN_TO_SEARCH => DESCRIPTOR(`g`),
    TOP_K => 10  )
)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[$5], e=[$6], f=[$7], g=[$8], score=[$9])
+- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
   :- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($4, 1000:INTERVAL SECOND)])
   :  +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[PROCTIME()])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, QueryTable]])
   +- LogicalTableFunctionScan(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], rowType=[RecordType(INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)])
      +- LogicalProject(e=[$0], f=[$1], g=[$2])
         +- LogicalTableScan(table=[[default_catalog, default_database, VectorTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[a, b, c, d, rowtime, PROCTIME_MATERIALIZE(proctime) AS proctime, e, f, g, score])
+- Correlate(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], correlate=[table(VECTOR_SEARCH(TABLE(),DESCRIPTOR('g'),$cor0.d,10))], select=[a,b,c,d,rowtime,proctime,e,f,g,score], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, FLOAT ARRAY d, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)], joinType=[INNER])
   +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
      +- Calc(select=[a, b, c, d, rowtime, PROCTIME() AS proctime])
         +- TableSourceScan(table=[[default_catalog, default_database, QueryTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSimple">
    <Resource name="sql">
      <![CDATA[SELECT * FROM QueryTable, LATERAL TABLE(
VECTOR_SEARCH(
    TABLE VectorTable, DESCRIPTOR(`g`), QueryTable.d, 10)
)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[$5], e=[$6], f=[$7], g=[$8], score=[$9])
+- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
   :- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($4, 1000:INTERVAL SECOND)])
   :  +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[PROCTIME()])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, QueryTable]])
   +- LogicalTableFunctionScan(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], rowType=[RecordType(INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)])
      +- LogicalProject(e=[$0], f=[$1], g=[$2])
         +- LogicalTableScan(table=[[default_catalog, default_database, VectorTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[a, b, c, d, rowtime, PROCTIME_MATERIALIZE(proctime) AS proctime, e, f, g, score])
+- Correlate(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], correlate=[table(VECTOR_SEARCH(TABLE(),DESCRIPTOR('g'),$cor0.d,10))], select=[a,b,c,d,rowtime,proctime,e,f,g,score], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, FLOAT ARRAY d, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)], joinType=[INNER])
   +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
      +- Calc(select=[a, b, c, d, rowtime, PROCTIME() AS proctime])
         +- TableSourceScan(table=[[default_catalog, default_database, QueryTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testOutOfOrderNamedArgument">
    <Resource name="sql">
      <![CDATA[SELECT * FROM QueryTable, LATERAL TABLE(
VECTOR_SEARCH(
    COLUMN_TO_QUERY => QueryTable.d,
    COLUMN_TO_SEARCH => DESCRIPTOR(`g`),
    TOP_K => 10,
    SEARCH_TABLE => TABLE VectorTable
  )
)]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[$5], e=[$6], f=[$7], g=[$8], score=[$9])
+- LogicalCorrelate(correlation=[$cor0], joinType=[inner], requiredColumns=[{3}])
   :- LogicalWatermarkAssigner(rowtime=[rowtime], watermark=[-($4, 1000:INTERVAL SECOND)])
   :  +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], proctime=[PROCTIME()])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, QueryTable]])
   +- LogicalTableFunctionScan(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], rowType=[RecordType(INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)])
      +- LogicalProject(e=[$0], f=[$1], g=[$2])
         +- LogicalTableScan(table=[[default_catalog, default_database, VectorTable]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[a, b, c, d, rowtime, PROCTIME_MATERIALIZE(proctime) AS proctime, e, f, g, score])
+- Correlate(invocation=[VECTOR_SEARCH(TABLE(#0), DESCRIPTOR(_UTF-16LE'g'), $cor0.d, 10)], correlate=[table(VECTOR_SEARCH(TABLE(),DESCRIPTOR('g'),$cor0.d,10))], select=[a,b,c,d,rowtime,proctime,e,f,g,score], rowType=[RecordType(INTEGER a, BIGINT b, VARCHAR(2147483647) c, FLOAT ARRAY d, TIMESTAMP(3) *ROWTIME* rowtime, TIMESTAMP_LTZ(3) *PROCTIME* proctime, INTEGER e, BIGINT f, FLOAT ARRAY g, DOUBLE score)], joinType=[INNER])
   +- WatermarkAssigner(rowtime=[rowtime], watermark=[-(rowtime, 1000:INTERVAL SECOND)])
      +- Calc(select=[a, b, c, d, rowtime, PROCTIME() AS proctime])
         +- TableSourceScan(table=[[default_catalog, default_database, QueryTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
</Root>
