<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testFullOuterJoinReorder">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4, T3, T2, T1 WHERE T4.a4 > 1 AND T3.a3 > 1]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[AND(>($0, 1), >($5, 1))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3, d2, d1], build=[right])
:- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3, d2], build=[right])
:  :- NestedLoopJoin(joinType=[InnerJoin], where=[true], select=[d4, c3], build=[left])
:  :  :- Exchange(distribution=[broadcast])
:  :  :  +- Calc(select=[d4], where=[>(a4, 1)])
:  :  :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, d4], metadata=[]]], fields=[a4, d4])
:  :  +- Calc(select=[c3], where=[>(a3, 1)])
:  :     +- TableSourceScan(table=[[test_catalog, test_database, T3, filter=[], project=[a3, c3], metadata=[]]], fields=[a3, c3])
:  +- Exchange(distribution=[broadcast])
:     +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[d2], metadata=[]]], fields=[d2])
+- Exchange(distribution=[broadcast])
   +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[d1], metadata=[]]], fields=[d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerAndLeftOuterJoinReorder">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 JOIN T3 ON T4.b4 = T3.b3 LEFT OUTER JOIN T2 ON T4.b4 = T2.b2 JOIN T1 ON T4.b4 = T1.b1 WHERE T4.a4 < 3]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<($0, 3)])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[left])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, d1, b2, d2], isBroadcast=[true], build=[right])
   :- Calc(select=[b4, d4, c3, d1])
   :  +- HashJoin(joinType=[InnerJoin], where=[=(b4, b1)], select=[b4, d4, c3, b1, d1], isBroadcast=[true], build=[left])
   :     :- Exchange(distribution=[broadcast])
   :     :  +- Calc(select=[b4, d4, c3])
   :     :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[left])
   :     :        :- Exchange(distribution=[broadcast])
   :     :        :  +- Calc(select=[b4, d4], where=[<(a4, 3)])
   :     :        :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, b4, d4], metadata=[]]], fields=[a4, b4, d4])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
   +- Exchange(distribution=[broadcast])
      +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinReorder">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 JOIN T3 ON T4.b4 = T3.b3 JOIN T2 ON T4.b4 = T2.b2 JOIN T1 ON T4.b4 = T1.b1 WHERE T1.a1 > 0 AND T3.a3 > 0]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[AND(>($13, 0), >($5, 0))])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[inner])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[InnerJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], isBroadcast=[true], build=[left])
   :- Exchange(distribution=[broadcast])
   :  +- Calc(select=[b4, d4, c3, d2])
   :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], isBroadcast=[true], build=[left])
   :        :- Exchange(distribution=[broadcast])
   :        :  +- Calc(select=[b4, d4, c3])
   :        :     +- HashJoin(joinType=[InnerJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[left])
   :        :        :- Exchange(distribution=[broadcast])
   :        :        :  +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
   :        :        +- Calc(select=[b3, c3], where=[>(a3, 0)])
   :        :           +- TableSourceScan(table=[[test_catalog, test_database, T3, filter=[]]], fields=[a3, b3, c3])
   :        +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Calc(select=[b1, d1], where=[>(a1, 0)])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, filter=[], project=[a1, b1, d1], metadata=[]]], fields=[a1, b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinReorder">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 LEFT OUTER JOIN T3 ON T4.b4 = T3.b3 LEFT OUTER JOIN T2 ON T4.b4 = T2.b2 LEFT OUTER JOIN T1 ON T4.b4 = T1.b1 WHERE T4.a4 < 3]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<($0, 3)])
   +- LogicalJoin(condition=[=($1, $14)], joinType=[left])
      :- LogicalJoin(condition=[=($1, $9)], joinType=[left])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[left])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b1)], select=[b4, d4, c3, d2, b1, d1], build=[left])
   :- Calc(select=[b4, d4, c3, d2])
   :  +- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b2)], select=[b4, d4, c3, b2, d2], isBroadcast=[true], build=[right])
   :     :- Calc(select=[b4, d4, c3])
   :     :  +- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b3)], select=[b4, d4, b3, c3], isBroadcast=[true], build=[right])
   :     :     :- Exchange(distribution=[hash[b4]])
   :     :     :  +- Calc(select=[b4, d4], where=[<(a4, 3)])
   :     :     :     +- TableSourceScan(table=[[test_catalog, test_database, T4, filter=[], project=[a4, b4, d4], metadata=[]]], fields=[a4, b4, d4])
   :     :     +- Exchange(distribution=[broadcast])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     +- Exchange(distribution=[broadcast])
   :        +- TableSourceScan(table=[[test_catalog, test_database, T2, project=[b2, d2], metadata=[]]], fields=[b2, d2])
   +- Exchange(distribution=[hash[b1]])
      +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinReorder">
    <Resource name="sql">
      <![CDATA[SELECT T4.d4, T3.c3, T2.d2, T1.d1 FROM T4 RIGHT OUTER JOIN T3 ON T4.b4 = T3.b3 JOIN T2 ON T3.b3 = T2.b2 JOIN T1 ON T2.b2 = T1.b1 WHERE T2.a2 <= 2]]>
    </Resource>
    <Resource name="ast">
      <![CDATA[
LogicalProject(d4=[$3], c3=[$7], d2=[$11], d1=[$16])
+- LogicalFilter(condition=[<=($8, 2)])
   +- LogicalJoin(condition=[=($9, $14)], joinType=[inner])
      :- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
      :  :- LogicalJoin(condition=[=($1, $6)], joinType=[right])
      :  :  :- LogicalTableScan(table=[[test_catalog, test_database, T4]])
      :  :  +- LogicalTableScan(table=[[test_catalog, test_database, T3]])
      :  +- LogicalTableScan(table=[[test_catalog, test_database, T2]])
      +- LogicalTableScan(table=[[test_catalog, test_database, T1]])
]]>
    </Resource>
    <Resource name="optimized rel plan">
      <![CDATA[
Calc(select=[d4, c3, d2, d1])
+- HashJoin(joinType=[LeftOuterJoin], where=[=(b4, b3)], select=[b3, c3, d2, d1, b4, d4], isBroadcast=[true], build=[right])
   :- Calc(select=[b3, c3, d2, d1])
   :  +- HashJoin(joinType=[InnerJoin], where=[=(b2, b1)], select=[b3, c3, b2, d2, b1, d1], isBroadcast=[true], build=[left])
   :     :- Exchange(distribution=[broadcast])
   :     :  +- HashJoin(joinType=[InnerJoin], where=[=(b3, b2)], select=[b3, c3, b2, d2], isBroadcast=[true], build=[left])
   :     :     :- Exchange(distribution=[broadcast])
   :     :     :  +- TableSourceScan(table=[[test_catalog, test_database, T3, project=[b3, c3], metadata=[]]], fields=[b3, c3])
   :     :     +- Calc(select=[b2, d2], where=[<=(a2, 2)])
   :     :        +- TableSourceScan(table=[[test_catalog, test_database, T2, filter=[], project=[a2, b2, d2], metadata=[]]], fields=[a2, b2, d2])
   :     +- TableSourceScan(table=[[test_catalog, test_database, T1, project=[b1, d1], metadata=[]]], fields=[b1, d1])
   +- Exchange(distribution=[broadcast])
      +- TableSourceScan(table=[[test_catalog, test_database, T4, project=[b4, d4], metadata=[]]], fields=[b4, d4])
]]>
    </Resource>
  </TestCase>
</Root>
