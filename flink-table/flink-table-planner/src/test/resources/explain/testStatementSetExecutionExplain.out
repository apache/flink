== Abstract Syntax Tree ==
LogicalSink(table=[default_catalog.default_database.MySink], fields=[last])
+- LogicalProject(last=[$3])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

LogicalSink(table=[default_catalog.default_database.MySink], fields=[first])
+- LogicalProject(first=[$0])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

== Optimized Physical Plan ==
Sink(table=[default_catalog.default_database.MySink], fields=[last])
+- Calc(select=[last])
   +- TableSourceScan(table=[[default_catalog, default_database, MyTable, project=[first, last], metadata=[]]], fields=[first, last])

Sink(table=[default_catalog.default_database.MySink], fields=[first])
+- Calc(select=[first])
   +- TableSourceScan(table=[[default_catalog, default_database, MyTable, project=[first, last], metadata=[]]], fields=[first, last])

== Optimized Execution Plan ==
TableSourceScan(table=[[default_catalog, default_database, MyTable, project=[first, last], metadata=[]]], fields=[first, last])(reuse_id=[1])

Sink(table=[default_catalog.default_database.MySink], fields=[last])
+- Calc(select=[last])
   +- Reused(reference_id=[1])

Sink(table=[default_catalog.default_database.MySink], fields=[first])
+- Calc(select=[first])
   +- Reused(reference_id=[1])

== Physical Execution Plan ==
{
  "nodes" : [ {
    "id" : ,
    "type" : "Source: MyTable[]",
    "pact" : "Data Source",
    "contents" : "[]:TableSourceScan(table=[[default_catalog, default_database, MyTable, project=[first, last], metadata=[]]], fields=[first, last])",
    "parallelism" : 1
  }, {
    "id" : ,
    "type" : "Calc[]",
    "pact" : "Operator",
    "contents" : "[]:Calc(select=[last])",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "StreamingFileWriter",
    "pact" : "Operator",
    "contents" : "StreamingFileWriter",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "Calc[]",
    "pact" : "Operator",
    "contents" : "[]:Calc(select=[first])",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "StreamingFileWriter",
    "pact" : "Operator",
    "contents" : "StreamingFileWriter",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "end: Writer",
    "pact" : "Operator",
    "contents" : "end: Writer",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "end: Writer",
    "pact" : "Operator",
    "contents" : "end: Writer",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  } ]
}