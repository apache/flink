{
  "flinkVersion" : "2.1",
  "nodes" : [ {
    "id" : 19,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Users`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "name",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "user_id_0",
              "dataType" : "VARCHAR(2147483647) NOT NULL"
            }, {
              "name" : "cash",
              "dataType" : "INT"
            } ],
            "primaryKey" : {
              "name" : "PK_user_id_0",
              "type" : "PRIMARY_KEY",
              "columns" : [ "user_id_0" ]
            }
          }
        }
      }
    },
    "outputType" : "ROW<`name` VARCHAR(2147483647), `user_id_0` VARCHAR(2147483647) NOT NULL, `cash` INT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Users]], fields=[name, user_id_0, cash])"
  }, {
    "id" : 20,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 1 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`name` VARCHAR(2147483647), `user_id_0` VARCHAR(2147483647) NOT NULL, `cash` INT>",
    "description" : "Exchange(distribution=[hash[user_id_0]])"
  }, {
    "id" : 21,
    "type" : "stream-exec-changelog-normalize_1",
    "configuration" : {
      "table.exec.mini-batch.enabled" : "false",
      "table.exec.mini-batch.size" : "-1"
    },
    "uniqueKeys" : [ 1 ],
    "generateUpdateBefore" : true,
    "state" : [ {
      "index" : 0,
      "ttl" : "0 ms",
      "name" : "changelogNormalizeState"
    } ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`name` VARCHAR(2147483647), `user_id_0` VARCHAR(2147483647) NOT NULL, `cash` INT>",
    "description" : "ChangelogNormalize(key=[user_id_0])"
  }, {
    "id" : 22,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 1 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`name` VARCHAR(2147483647), `user_id_0` VARCHAR(2147483647) NOT NULL, `cash` INT>",
    "description" : "Exchange(distribution=[hash[user_id_0]])"
  }, {
    "id" : 23,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Orders`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "order_id",
              "dataType" : "VARCHAR(2147483647) NOT NULL"
            }, {
              "name" : "product",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "user_id_1",
              "dataType" : "VARCHAR(2147483647)"
            } ],
            "primaryKey" : {
              "name" : "PK_order_id",
              "type" : "PRIMARY_KEY",
              "columns" : [ "order_id" ]
            }
          }
        }
      }
    },
    "outputType" : "ROW<`order_id` VARCHAR(2147483647) NOT NULL, `product` VARCHAR(2147483647), `user_id_1` VARCHAR(2147483647)>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Orders]], fields=[order_id, product, user_id_1])"
  }, {
    "id" : 24,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 2 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`order_id` VARCHAR(2147483647) NOT NULL, `product` VARCHAR(2147483647), `user_id_1` VARCHAR(2147483647)>",
    "description" : "Exchange(distribution=[hash[user_id_1]])"
  }, {
    "id" : 25,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Payments`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "user_id_2",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "payment_id",
              "dataType" : "VARCHAR(2147483647) NOT NULL"
            }, {
              "name" : "price",
              "dataType" : "INT"
            } ],
            "primaryKey" : {
              "name" : "PK_payment_id",
              "type" : "PRIMARY_KEY",
              "columns" : [ "payment_id" ]
            }
          }
        }
      }
    },
    "outputType" : "ROW<`user_id_2` VARCHAR(2147483647), `payment_id` VARCHAR(2147483647) NOT NULL, `price` INT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Payments]], fields=[user_id_2, payment_id, price])"
  }, {
    "id" : 26,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id_2` VARCHAR(2147483647), `payment_id` VARCHAR(2147483647) NOT NULL, `price` INT>",
    "description" : "Exchange(distribution=[hash[user_id_2]])"
  }, {
    "id" : 27,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Shipments`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "location",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "user_id_3",
              "dataType" : "VARCHAR(2147483647)"
            } ]
          }
        }
      }
    },
    "outputType" : "ROW<`location` VARCHAR(2147483647), `user_id_3` VARCHAR(2147483647)>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Shipments]], fields=[location, user_id_3])"
  }, {
    "id" : 28,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 1 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`location` VARCHAR(2147483647), `user_id_3` VARCHAR(2147483647)>",
    "description" : "Exchange(distribution=[hash[user_id_3]])"
  }, {
    "id" : 29,
    "type" : "stream-exec-multi-join_1",
    "joinTypes" : [ "INNER", "LEFT", "INNER", "LEFT" ],
    "joinConditions" : [ {
      "kind" : "LITERAL",
      "value" : true,
      "type" : "BOOLEAN NOT NULL"
    }, {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$=$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 1,
        "type" : "VARCHAR(2147483647) NOT NULL"
      }, {
        "kind" : "INPUT_REF",
        "inputIndex" : 5,
        "type" : "VARCHAR(2147483647)"
      } ],
      "type" : "BOOLEAN"
    }, {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$AND$1",
      "operands" : [ {
        "kind" : "CALL",
        "syntax" : "BINARY",
        "internalName" : "$=$1",
        "operands" : [ {
          "kind" : "INPUT_REF",
          "inputIndex" : 1,
          "type" : "VARCHAR(2147483647) NOT NULL"
        }, {
          "kind" : "INPUT_REF",
          "inputIndex" : 6,
          "type" : "VARCHAR(2147483647)"
        } ],
        "type" : "BOOLEAN"
      }, {
        "kind" : "CALL",
        "syntax" : "BINARY",
        "internalName" : "$OR$1",
        "operands" : [ {
          "kind" : "CALL",
          "syntax" : "BINARY",
          "internalName" : "$>=$1",
          "operands" : [ {
            "kind" : "INPUT_REF",
            "inputIndex" : 2,
            "type" : "INT"
          }, {
            "kind" : "INPUT_REF",
            "inputIndex" : 8,
            "type" : "INT"
          } ],
          "type" : "BOOLEAN"
        }, {
          "kind" : "CALL",
          "syntax" : "BINARY",
          "internalName" : "$<$1",
          "operands" : [ {
            "kind" : "INPUT_REF",
            "inputIndex" : 8,
            "type" : "INT"
          }, {
            "kind" : "LITERAL",
            "value" : 0,
            "type" : "INT NOT NULL"
          } ],
          "type" : "BOOLEAN"
        } ],
        "type" : "BOOLEAN"
      } ],
      "type" : "BOOLEAN"
    }, {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$=$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 6,
        "type" : "VARCHAR(2147483647)"
      }, {
        "kind" : "INPUT_REF",
        "inputIndex" : 10,
        "type" : "VARCHAR(2147483647)"
      } ],
      "type" : "BOOLEAN"
    } ],
    "multiJoinCondition" : {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$AND$1",
      "operands" : [ {
        "kind" : "CALL",
        "syntax" : "BINARY",
        "internalName" : "$=$1",
        "operands" : [ {
          "kind" : "INPUT_REF",
          "inputIndex" : 1,
          "type" : "VARCHAR(2147483647) NOT NULL"
        }, {
          "kind" : "INPUT_REF",
          "inputIndex" : 6,
          "type" : "VARCHAR(2147483647)"
        } ],
        "type" : "BOOLEAN"
      }, {
        "kind" : "CALL",
        "syntax" : "BINARY",
        "internalName" : "$OR$1",
        "operands" : [ {
          "kind" : "CALL",
          "syntax" : "BINARY",
          "internalName" : "$>=$1",
          "operands" : [ {
            "kind" : "INPUT_REF",
            "inputIndex" : 2,
            "type" : "INT"
          }, {
            "kind" : "INPUT_REF",
            "inputIndex" : 8,
            "type" : "INT"
          } ],
          "type" : "BOOLEAN"
        }, {
          "kind" : "CALL",
          "syntax" : "BINARY",
          "internalName" : "$<$1",
          "operands" : [ {
            "kind" : "INPUT_REF",
            "inputIndex" : 8,
            "type" : "INT"
          }, {
            "kind" : "LITERAL",
            "value" : 0,
            "type" : "INT NOT NULL"
          } ],
          "type" : "BOOLEAN"
        } ],
        "type" : "BOOLEAN"
      } ],
      "type" : "BOOLEAN"
    },
    "joinAttributeMap" : {
      "1" : [ {
        "leftInputId" : 0,
        "leftFieldIndex" : 1,
        "rightInputId" : 1,
        "rightFieldIndex" : 2
      } ],
      "2" : [ {
        "leftInputId" : 0,
        "leftFieldIndex" : 1,
        "rightInputId" : 2,
        "rightFieldIndex" : 0
      } ],
      "3" : [ {
        "leftInputId" : 2,
        "leftFieldIndex" : 0,
        "rightInputId" : 3,
        "rightFieldIndex" : 1
      } ]
    },
    "inputUpsertKeys" : [ [ [ 1 ] ], [ ], [ ], [ ] ],
    "state" : [ {
      "index" : 0,
      "ttl" : "0 ms",
      "name" : "input-state-0"
    }, {
      "index" : 1,
      "ttl" : "0 ms",
      "name" : "input-state-1"
    }, {
      "index" : 2,
      "ttl" : "0 ms",
      "name" : "input-state-2"
    }, {
      "index" : 3,
      "ttl" : "0 ms",
      "name" : "input-state-3"
    } ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 1 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    }, {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 2 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 1
    }, {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 2
    }, {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 1 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 3
    } ],
    "outputType" : "ROW<`name` VARCHAR(2147483647), `user_id_0` VARCHAR(2147483647) NOT NULL, `cash` INT, `order_id` VARCHAR(2147483647), `product` VARCHAR(2147483647), `user_id_1` VARCHAR(2147483647), `user_id_2` VARCHAR(2147483647), `payment_id` VARCHAR(2147483647) NOT NULL, `price` INT, `location` VARCHAR(2147483647), `user_id_3` VARCHAR(2147483647)>",
    "description" : "MultiJoin(joinFilter=[AND(=($1, $6), OR(>=($2, $8), <($8, 0)))], joinTypes=[[INNER, LEFT, INNER, LEFT]], joinConditions=[[true, =($1, $5), AND(=($1, $6), OR(>=($2, $8), <($8, 0))), =($6, $10)]], joinAttributeMap=[{1=[LeftInputId:0;LeftFieldIndex:1;RightInputId:1;RightFieldIndex:2;], 2=[LeftInputId:0;LeftFieldIndex:1;RightInputId:2;RightFieldIndex:0;], 3=[LeftInputId:2;LeftFieldIndex:0;RightInputId:3;RightFieldIndex:1;]}], select=[name,user_id_0,cash,order_id,product,user_id_1,user_id_2,payment_id,price,location,user_id_3], rowType=[RecordType(VARCHAR(2147483647) name, VARCHAR(2147483647) user_id_0, INTEGER cash, VARCHAR(2147483647) order_id, VARCHAR(2147483647) product, VARCHAR(2147483647) user_id_1, VARCHAR(2147483647) user_id_2, VARCHAR(2147483647) payment_id, INTEGER price, VARCHAR(2147483647) location, VARCHAR(2147483647) user_id_3)])"
  }, {
    "id" : 30,
    "type" : "stream-exec-calc_1",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : "VARCHAR(2147483647) NOT NULL"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : "VARCHAR(2147483647)"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 3,
      "type" : "VARCHAR(2147483647)"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 7,
      "type" : "VARCHAR(2147483647) NOT NULL"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 9,
      "type" : "VARCHAR(2147483647)"
    } ],
    "condition" : null,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id_0` VARCHAR(2147483647) NOT NULL, `name` VARCHAR(2147483647), `order_id` VARCHAR(2147483647), `payment_id` VARCHAR(2147483647) NOT NULL, `location` VARCHAR(2147483647)>",
    "description" : "Calc(select=[user_id_0, name, order_id, payment_id, location])"
  }, {
    "id" : 31,
    "type" : "stream-exec-sink_1",
    "configuration" : {
      "table.exec.sink.keyed-shuffle" : "AUTO",
      "table.exec.sink.not-null-enforcer" : "ERROR",
      "table.exec.sink.rowtime-inserter" : "ENABLED",
      "table.exec.sink.type-length-enforcer" : "IGNORE",
      "table.exec.sink.upsert-materialize" : "AUTO"
    },
    "dynamicTableSink" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`sink`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "user_id",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "name",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "order_id",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "payment_id",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "location",
              "dataType" : "VARCHAR(2147483647)"
            } ]
          }
        }
      }
    },
    "inputChangelogMode" : [ "INSERT", "UPDATE_BEFORE", "UPDATE_AFTER", "DELETE" ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id_0` VARCHAR(2147483647) NOT NULL, `name` VARCHAR(2147483647), `order_id` VARCHAR(2147483647), `payment_id` VARCHAR(2147483647) NOT NULL, `location` VARCHAR(2147483647)>",
    "description" : "Sink(table=[default_catalog.default_database.sink], fields=[user_id_0, name, order_id, payment_id, location])"
  } ],
  "edges" : [ {
    "source" : 19,
    "target" : 20,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 20,
    "target" : 21,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 21,
    "target" : 22,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 23,
    "target" : 24,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 25,
    "target" : 26,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 27,
    "target" : 28,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 22,
    "target" : 29,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 24,
    "target" : 29,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 26,
    "target" : 29,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 28,
    "target" : 29,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 29,
    "target" : 30,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 30,
    "target" : 31,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}
