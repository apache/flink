{
  "flinkVersion" : "2.2",
  "nodes" : [ {
    "id" : 82,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Orders`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "user_id",
              "dataType" : "INT NOT NULL"
            }, {
              "name" : "order_id",
              "dataType" : "BIGINT NOT NULL"
            }, {
              "name" : "product",
              "dataType" : "VARCHAR(2147483647)"
            } ],
            "primaryKey" : {
              "name" : "PRIMARY",
              "type" : "PRIMARY_KEY",
              "columns" : [ "user_id", "order_id" ]
            }
          }
        }
      }
    },
    "outputType" : "ROW<`user_id` INT NOT NULL, `order_id` BIGINT NOT NULL, `product` VARCHAR(2147483647)>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Orders]], fields=[user_id, order_id, product])"
  }, {
    "id" : 83,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id` INT NOT NULL, `order_id` BIGINT NOT NULL, `product` VARCHAR(2147483647)>",
    "description" : "Exchange(distribution=[hash[user_id]])"
  }, {
    "id" : 84,
    "type" : "stream-exec-table-source-scan_1",
    "scanTableSource" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`Users`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "user_id",
              "dataType" : "INT NOT NULL"
            }, {
              "name" : "shard_id",
              "dataType" : "INT NOT NULL"
            }, {
              "name" : "description",
              "dataType" : "VARCHAR(2147483647)"
            } ],
            "primaryKey" : {
              "name" : "PRIMARY",
              "type" : "PRIMARY_KEY",
              "columns" : [ "user_id" ]
            }
          }
        }
      },
      "abilities" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`user_id` INT NOT NULL, `shard_id` INT NOT NULL> NOT NULL"
      }, {
        "type" : "ReadingMetadata",
        "metadataKeys" : [ ],
        "producedType" : "ROW<`user_id` INT NOT NULL, `shard_id` INT NOT NULL> NOT NULL"
      } ]
    },
    "outputType" : "ROW<`user_id` INT NOT NULL, `shard_id` INT NOT NULL>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, Users, project=[user_id, shard_id], metadata=[]]], fields=[user_id, shard_id])"
  }, {
    "id" : 85,
    "type" : "stream-exec-exchange_1",
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id` INT NOT NULL, `shard_id` INT NOT NULL>",
    "description" : "Exchange(distribution=[hash[user_id]])"
  }, {
    "id" : 86,
    "type" : "stream-exec-multi-join_1",
    "joinTypes" : [ "INNER", "LEFT" ],
    "joinConditions" : [ {
      "kind" : "LITERAL",
      "value" : true,
      "type" : "BOOLEAN NOT NULL"
    }, {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$=$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 3,
        "type" : "INT NOT NULL"
      }, {
        "kind" : "INPUT_REF",
        "inputIndex" : 0,
        "type" : "INT NOT NULL"
      } ],
      "type" : "BOOLEAN NOT NULL"
    } ],
    "multiJoinCondition" : {
      "kind" : "CALL",
      "syntax" : "BINARY",
      "internalName" : "$=$1",
      "operands" : [ {
        "kind" : "INPUT_REF",
        "inputIndex" : 3,
        "type" : "INT NOT NULL"
      }, {
        "kind" : "INPUT_REF",
        "inputIndex" : 0,
        "type" : "INT NOT NULL"
      } ],
      "type" : "BOOLEAN NOT NULL"
    },
    "joinAttributeMap" : {
      "0" : [ {
        "leftInputId" : -1,
        "leftFieldIndex" : -1,
        "rightInputId" : 0,
        "rightFieldIndex" : 0
      } ],
      "1" : [ {
        "leftInputId" : 0,
        "leftFieldIndex" : 0,
        "rightInputId" : 1,
        "rightFieldIndex" : 0
      } ]
    },
    "inputUniqueKeys" : [ [ [ 0, 1 ] ], [ [ 0 ] ] ],
    "state" : [ {
      "index" : 0,
      "ttl" : "0 ms",
      "name" : "input-state-0"
    }, {
      "index" : 1,
      "ttl" : "0 ms",
      "name" : "input-state-1"
    } ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    }, {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 1
    } ],
    "outputType" : "ROW<`user_id` INT NOT NULL, `order_id` BIGINT NOT NULL, `product` VARCHAR(2147483647), `user_id0` INT, `shard_id` INT>",
    "description" : "MultiJoin(commonJoinKey=[user_id], joinTypes=[LEFT], inputUniqueKeys=[(user_id, order_id), (user_id)], joinConditions=[(user_id0 = user_id)], select=[user_id,order_id,product,user_id0,shard_id], rowType=[RecordType(INTEGER user_id, BIGINT order_id, VARCHAR(2147483647) product, INTEGER user_id0, INTEGER shard_id)])"
  }, {
    "id" : 87,
    "type" : "stream-exec-calc_1",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : "INT NOT NULL"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : "BIGINT NOT NULL"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 2,
      "type" : "VARCHAR(2147483647)"
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 4,
      "type" : "INT"
    } ],
    "condition" : null,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id` INT NOT NULL, `order_id` BIGINT NOT NULL, `product` VARCHAR(2147483647), `shard_id` INT>",
    "description" : "Calc(select=[user_id, order_id, product, shard_id])"
  }, {
    "id" : 88,
    "type" : "stream-exec-sink_1",
    "configuration" : {
      "table.exec.sink.keyed-shuffle" : "AUTO",
      "table.exec.sink.not-null-enforcer" : "ERROR",
      "table.exec.sink.rowtime-inserter" : "ENABLED",
      "table.exec.sink.type-length-enforcer" : "IGNORE",
      "table.exec.sink.upsert-materialize" : "AUTO"
    },
    "dynamicTableSink" : {
      "table" : {
        "identifier" : "`default_catalog`.`default_database`.`sink`",
        "resolvedTable" : {
          "schema" : {
            "columns" : [ {
              "name" : "user_id",
              "dataType" : "INT NOT NULL"
            }, {
              "name" : "order_id",
              "dataType" : "BIGINT NOT NULL"
            }, {
              "name" : "product",
              "dataType" : "VARCHAR(2147483647)"
            }, {
              "name" : "user_shard_id",
              "dataType" : "INT"
            } ],
            "primaryKey" : {
              "name" : "PRIMARY",
              "type" : "PRIMARY_KEY",
              "columns" : [ "user_id", "order_id" ]
            }
          }
        }
      }
    },
    "inputChangelogMode" : [ "INSERT", "UPDATE_AFTER", "~DELETE" ],
    "inputUpsertKey" : [ 0, 1 ],
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`user_id` INT NOT NULL, `order_id` BIGINT NOT NULL, `product` VARCHAR(2147483647), `shard_id` INT>",
    "description" : "Sink(table=[default_catalog.default_database.sink], fields=[user_id, order_id, product, shard_id])"
  } ],
  "edges" : [ {
    "source" : 82,
    "target" : 83,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 84,
    "target" : 85,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 83,
    "target" : 86,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 85,
    "target" : 86,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 86,
    "target" : 87,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 87,
    "target" : 88,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}