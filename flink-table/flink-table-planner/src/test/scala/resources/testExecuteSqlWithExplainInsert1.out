== Abstract Syntax Tree ==
LogicalSink(name=[`default_catalog`.`default_database`.`MySink`], fields=[d, e])
  LogicalProject(d=[$0], e=[$1])
    LogicalFilter(condition=[>($0, 10)])
      LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

== Optimized Logical Plan ==
DataSetSink(name=[`default_catalog`.`default_database`.`MySink`], fields=[d, e])
  DataSetCalc(select=[a, b], where=[>(a, 10)])
    BatchTableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b], source=[CollectionTableSource(a, b, c)])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat
	Partitioning : RANDOM_PARTITIONED

	 : Map
		content : from: (a, b)
		ship_strategy : Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

		 : FlatMap
			content : where: (>(a, 10)), select: (a, b)
			ship_strategy : Forward
			exchange_mode : PIPELINED
			driver_strategy : FlatMap
			Partitioning : RANDOM_PARTITIONED

			 : Data Sink
				content : org.apache.flink.api.java.io.DiscardingOutputFormat
				ship_strategy : Forward
				exchange_mode : PIPELINED
				Partitioning : RANDOM_PARTITIONED

