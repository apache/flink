== Abstract Syntax Tree ==
LogicalSink(name=[default_catalog.default_database.targetTable1], fields=[d, e])
  LogicalProject(first=[$0], id=[$1])
    LogicalTableScan(table=[[default_catalog, default_database, sourceTable]])

LogicalSink(name=[default_catalog.default_database.targetTable2], fields=[d, e])
  LogicalProject(last=[$3], id=[$1])
    LogicalTableScan(table=[[default_catalog, default_database, sourceTable]])

== Optimized Logical Plan ==
DataStreamSink(name=[default_catalog.default_database.targetTable1], fields=[d, e])
  StreamTableSourceScan(table=[[default_catalog, default_database, sourceTable]], fields=[first, id], source=[CsvTableSource(read fields: first, id)])

DataStreamSink(name=[default_catalog.default_database.targetTable2], fields=[d, e])
  StreamTableSourceScan(table=[[default_catalog, default_database, sourceTable]], fields=[last, id], source=[CsvTableSource(read fields: last, id)])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : CsvTableSource(read fields: first, id)
		ship_strategy : REBALANCE

		 : Operator
			content : Map
			ship_strategy : FORWARD

			 : Operator
				content : to: Row
				ship_strategy : FORWARD

 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : CsvTableSource(read fields: last, id)
		ship_strategy : REBALANCE

		 : Operator
			content : Map
			ship_strategy : FORWARD

			 : Operator
				content : to: Row
				ship_strategy : FORWARD

				 : Data Sink
					content : Sink: UnsafeMemoryAppendTableSink(d, e)
					ship_strategy : FORWARD

					 : Data Sink
						content : Sink: UnsafeMemoryAppendTableSink(d, e)
						ship_strategy : FORWARD

