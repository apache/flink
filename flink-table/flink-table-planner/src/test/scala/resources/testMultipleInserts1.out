== Abstract Syntax Tree ==
LogicalSink(name=[`default_catalog`.`default_database`.`targetTable1`], fields=[d, e])
  LogicalProject(first=[$0], id=[$1])
    LogicalTableScan(table=[[default_catalog, default_database, sourceTable]])

LogicalSink(name=[`default_catalog`.`default_database`.`targetTable2`], fields=[d, e])
  LogicalProject(last=[$3], id=[$1])
    LogicalTableScan(table=[[default_catalog, default_database, sourceTable]])

== Optimized Logical Plan ==
DataSetSink(name=[`default_catalog`.`default_database`.`targetTable1`], fields=[d, e])
  BatchTableSourceScan(table=[[default_catalog, default_database, sourceTable]], fields=[first, id], source=[CsvTableSource(read fields: first, id)])

DataSetSink(name=[`default_catalog`.`default_database`.`targetTable2`], fields=[d, e])
  BatchTableSourceScan(table=[[default_catalog, default_database, sourceTable]], fields=[last, id], source=[CsvTableSource(read fields: last, id)])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat
	Partitioning : RANDOM_PARTITIONED

	 : Map
		content : to: Row
		ship_strategy : Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

		 : Data Sink
			content : UnsafeMemoryAppendTableSink(d, e)
			ship_strategy : Forward
			exchange_mode : PIPELINED
			Partitioning : RANDOM_PARTITIONED

 : Data Source
	content : collect elements with CollectionInputFormat
	Partitioning : RANDOM_PARTITIONED

	 : Map
		content : to: Row
		ship_strategy : Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

		 : Data Sink
			content : UnsafeMemoryAppendTableSink(d, e)
			ship_strategy : Forward
			exchange_mode : PIPELINED
			Partitioning : RANDOM_PARTITIONED

