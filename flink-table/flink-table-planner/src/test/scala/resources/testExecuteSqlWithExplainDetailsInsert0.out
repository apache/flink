== Abstract Syntax Tree ==
LogicalSink(name=[default_catalog.default_database.MySink], fields=[d, e])
  LogicalProject(a=[$0], b=[$1])
    LogicalFilter(condition=[>($0, 10)])
      LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

== Optimized Logical Plan ==
DataStreamSink(name=[default_catalog.default_database.MySink], fields=[d, e])
  DataStreamCalc(select=[a, b], where=[>(a, 10)])
    StreamTableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b], source=[CollectionTableSource(a, b, c)])

== Physical Execution Plan ==
{
  "nodes" : [ {
    "id" : ,
    "type" : "Source: Custom Source",
    "pact" : "Data Source",
    "contents" : "Source: Custom Source",
    "parallelism" : 1
  }, {
    "id" : ,
    "type" : "from: (a, b)",
    "pact" : "Operator",
    "contents" : "from: (a, b)",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "where: (>(a, 10)), select: (a, b)",
    "pact" : "Operator",
    "contents" : "where: (>(a, 10)), select: (a, b)",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "to: Row",
    "pact" : "Operator",
    "contents" : "to: Row",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  }, {
    "id" : ,
    "type" : "Sink: Unnamed",
    "pact" : "Data Sink",
    "contents" : "Sink: Unnamed",
    "parallelism" : 1,
    "predecessors" : [ {
      "id" : ,
      "ship_strategy" : "FORWARD",
      "side" : "second"
    } ]
  } ]
}
