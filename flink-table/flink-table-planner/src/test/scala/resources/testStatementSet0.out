== Abstract Syntax Tree ==
LogicalSink(name=[default_catalog.default_database.MySink1], fields=[first])
  LogicalProject(first=[$0])
    LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

LogicalSink(name=[default_catalog.default_database.MySink2], fields=[last])
  LogicalProject(last=[$3])
    LogicalTableScan(table=[[default_catalog, default_database, MyTable]])

== Optimized Logical Plan ==
DataStreamSink(name=[default_catalog.default_database.MySink1], fields=[first])
  StreamTableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[first], source=[CsvTableSource(read fields: first)])

DataStreamSink(name=[default_catalog.default_database.MySink2], fields=[last])
  StreamTableSourceScan(table=[[default_catalog, default_database, MyTable]], fields=[last], source=[CsvTableSource(read fields: last)])

== Physical Execution Plan ==
 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : CsvTableSource(read fields: first)
		ship_strategy : REBALANCE

		 : Operator
			content : Map
			ship_strategy : FORWARD

			 : Operator
				content : to: Row
				ship_strategy : FORWARD

				 : Operator
					content : Map
					ship_strategy : REBALANCE

 : Data Source
	content : collect elements with CollectionInputFormat

	 : Operator
		content : CsvTableSource(read fields: last)
		ship_strategy : REBALANCE

		 : Operator
			content : Map
			ship_strategy : FORWARD

			 : Operator
				content : to: Row
				ship_strategy : FORWARD

				 : Operator
					content : Map
					ship_strategy : REBALANCE

					 : Data Sink
						content : Sink: CsvTableSink(first)
						ship_strategy : FORWARD

						 : Data Sink
							content : Sink: CsvTableSink(last)
							ship_strategy : FORWARD

