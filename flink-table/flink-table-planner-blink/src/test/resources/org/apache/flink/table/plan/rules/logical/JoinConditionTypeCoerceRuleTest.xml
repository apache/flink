<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testInToSemiJoinDoubleEqualsDecimal">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.d IN (SELECT e FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($3, {
LogicalProject(e=[$4])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalJoin(condition=[=($3, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   :- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalProject(e=[$0], e0=[CAST($0):DOUBLE]), rowType=[RecordType(DECIMAL(38, 18) e, DOUBLE e0)]
      +- LogicalProject(e=[$4]), rowType=[RecordType(DECIMAL(38, 18) e)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinFloatEqualsDecimal">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.c IN (SELECT e FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($2, {
LogicalProject(e=[$4])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalJoin(condition=[=($5, $7)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DOUBLE c0)]
      :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], c0=[CAST($2):DOUBLE]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DOUBLE c0)]
      :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
      +- LogicalProject(e=[$0], e0=[CAST($0):DOUBLE]), rowType=[RecordType(DECIMAL(38, 18) e, DOUBLE e0)]
         +- LogicalProject(e=[$4]), rowType=[RecordType(DECIMAL(38, 18) e)]
            +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinIntEqualsDecimal">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.a IN (SELECT e FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($0, {
LogicalProject(e=[$4])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalJoin(condition=[=($5, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DECIMAL(38, 18) a0)]
      :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):DECIMAL(38, 18)]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DECIMAL(38, 18) a0)]
      :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
      +- LogicalProject(e=[$4]), rowType=[RecordType(DECIMAL(38, 18) e)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinFloatEqualsDouble">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.c IN (SELECT d FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($2, {
LogicalProject(d=[$3])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalJoin(condition=[=($2, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   :- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalProject(d=[$0], d0=[CAST($0):FLOAT]), rowType=[RecordType(DOUBLE d, FLOAT d0)]
      +- LogicalProject(d=[$3]), rowType=[RecordType(DOUBLE d)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinIntEqualsDouble">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.a IN (SELECT d FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($0, {
LogicalProject(d=[$3])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalJoin(condition=[=($5, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DOUBLE a0)]
      :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):DOUBLE]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, DOUBLE a0)]
      :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
      +- LogicalProject(d=[$3]), rowType=[RecordType(DOUBLE d)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinIntEqualsFloat">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.a IN (SELECT c FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($0, {
LogicalProject(c=[$2])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalJoin(condition=[=($5, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, FLOAT a0)]
      :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):FLOAT]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, FLOAT a0)]
      :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
      +- LogicalProject(c=[$2]), rowType=[RecordType(FLOAT c)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testInToSemiJoinIntEqualsLong">
    <Resource name="sql">
      <![CDATA[SELECT * FROM T1 WHERE T1.a IN (SELECT b FROM T2)]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalFilter(condition=[IN($0, {
LogicalProject(b=[$1])
  LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]])
})]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
+- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalJoin(condition=[=($5, $6)], joinType=[semi]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0)]
      :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):BIGINT]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0)]
      :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
      +- LogicalProject(b=[$1]), rowType=[RecordType(BIGINT b)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionEqualsTypesNotEquals01">
    <Resource name="sql">
      <![CDATA[SELECT a FROM T1 LEFT JOIN (SELECT COUNT(*) AS cnt FROM T2) AS x ON a = x.cnt]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0]), rowType=[RecordType(INTEGER a)]
+- LogicalJoin(condition=[=($5, $6)], joinType=[left]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0, BIGINT cnt)]
   :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):BIGINT]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0)]
   :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalAggregate(group=[{}], cnt=[COUNT()]), rowType=[RecordType(BIGINT cnt)]
      +- LogicalProject($f0=[0]), rowType=[RecordType(INTEGER $f0)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a=[$0]), rowType=[RecordType(INTEGER a)]
+- LogicalJoin(condition=[=($5, $6)], joinType=[left]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0, BIGINT cnt)]
   :- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], e=[$4], a0=[CAST($0):BIGINT]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e, BIGINT a0)]
   :  +- LogicalTableScan(table=[[T1, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
   +- LogicalAggregate(group=[{}], cnt=[COUNT()]), rowType=[RecordType(BIGINT cnt)]
      +- LogicalProject($f0=[0]), rowType=[RecordType(INTEGER $f0)]
         +- LogicalTableScan(table=[[T2, source: [TestTableSource(a, b, c, d, e)]]]), rowType=[RecordType(INTEGER a, BIGINT b, FLOAT c, DOUBLE d, DECIMAL(38, 18) e)]
]]>
    </Resource>
  </TestCase>
  <TestCase name="testJoinConditionEqualsTypesNotEquals02">
    <Resource name="sql">
      <![CDATA[
-- TC 01.04
SELECT t3a,
       t3b
FROM   T3
WHERE  t3c IN (SELECT t4b
               FROM   T4
               WHERE  t3a = t4a
                       OR t3b > t4b)
      ]]>
    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(t3a=[$0], t3b=[$1]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b)]
+- LogicalFilter(condition=[IN($2, {
LogicalProject(t4b=[$1])
  LogicalFilter(condition=[OR(=($cor0.t3a, $0), >($cor0.t3b, $1))])
    LogicalTableScan(table=[[T4, source: [TestTableSource(t4a, t4b, t4c)]]])
})], variablesSet=[[$cor0]]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b, INTEGER t3c)]
   +- LogicalTableScan(table=[[T3, source: [TestTableSource(t3a, t3b, t3c)]]]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b, INTEGER t3c)]
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(t3a=[$0], t3b=[$1]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b)]
+- LogicalJoin(condition=[AND(=($0, $4), =($1, $5), =($2, CAST($3):INTEGER))], joinType=[inner]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b, INTEGER t3c, SMALLINT t4b, VARCHAR(65536) t3a0, SMALLINT t3b0)]
   :- LogicalTableScan(table=[[T3, source: [TestTableSource(t3a, t3b, t3c)]]]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b, INTEGER t3c)]
   +- LogicalAggregate(group=[{0, 1, 2}]), rowType=[RecordType(SMALLINT t4b, VARCHAR(65536) t3a, SMALLINT t3b)]
      +- LogicalProject(t4b=[$1], t3a=[$3], t3b=[$4]), rowType=[RecordType(SMALLINT t4b, VARCHAR(65536) t3a, SMALLINT t3b)]
         +- LogicalJoin(condition=[OR(=($3, $0), >($4, $1))], joinType=[inner]), rowType=[RecordType(VARCHAR(65536) t4a, SMALLINT t4b, INTEGER t4c, VARCHAR(65536) t3a, SMALLINT t3b)]
            :- LogicalTableScan(table=[[T4, source: [TestTableSource(t4a, t4b, t4c)]]]), rowType=[RecordType(VARCHAR(65536) t4a, SMALLINT t4b, INTEGER t4c)]
            +- LogicalAggregate(group=[{0, 1}]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b)]
               +- LogicalProject(t3a=[$0], t3b=[$1]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b)]
                  +- LogicalTableScan(table=[[T3, source: [TestTableSource(t3a, t3b, t3c)]]]), rowType=[RecordType(VARCHAR(65536) t3a, SMALLINT t3b, INTEGER t3c)]
]]>
    </Resource>
  </TestCase>
</Root>
