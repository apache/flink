<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testAddColumns">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a=[$0], b=[$1], c=[$2], kid=[CONCAT($2, _UTF-16LE'_kid_last')], _c4=[+($0, 2)], b2=[$1], _c6=[_UTF-16LE'literal_value'])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[a, b, c, CONCAT(c, _UTF-16LE'_kid_last') AS kid, +(a, 2) AS _c4, b AS b2, _UTF-16LE'literal_value' AS _c6])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testDropColumns">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(c=[$2])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[c])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testIn">
    <Resource name="planBefore">
      <![CDATA[
LogicalFilter(condition=[AND(OR(=($1, 1), =($1, 2), =($1, 3), =($1, 4), =($1, 5), =($1, 6), =($1, 7), =($1, 8), =($1, 9), =($1, 10), =($1, 11), =($1, 12), =($1, 13), =($1, 14), =($1, 15), =($1, 16), =($1, 17), =($1, 18), =($1, 19), =($1, 20), =($1, 21), =($1, 22), =($1, 23), =($1, 24), =($1, 25), =($1, 26), =($1, 27), =($1, 28), =($1, 29), =($1, 30)), =($2, _UTF-16LE'xx'))])
+- LogicalProject(a=[$0], b=[$1], c=[$2])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[a, b, CAST(_UTF-16LE'xx':VARCHAR(2147483647) CHARACTER SET "UTF-16LE") AS c], where=[AND(IN(b, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30), =(c, _UTF-16LE'xx'))])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSimpleMap">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(_c0=[org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f0], _c1=[org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f1], _c2=[org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f2], _c3=[org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f3])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[Func23$(a, b, c).f0 AS _c0, Func23$(a, b, c).f1 AS _c1, Func23$(a, b, c).f2 AS _c2, Func23$(a, b, c).f3 AS _c3])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testMultiFilter">
    <Resource name="planBefore">
      <![CDATA[
LogicalFilter(condition=[=(MOD($0, 2), 1)])
+- LogicalFilter(condition=[<($1, 2)])
   +- LogicalFilter(condition=[>($0, 0)])
      +- LogicalProject(a=[$0], b=[$1])
         +- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c, d)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[a, b], where=[AND(>(a, 0), <(b, 2), =(MOD(a, 2), 1))])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c, d)]]], fields=[a, b, c, d])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testMultiMap">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(_c0=[org$apache$flink$table$planner$expressions$utils$Func24$$2da7dcb3c9bedfd621ee539995571a90(org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f0, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f1, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f2, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f3).f0], _c1=[org$apache$flink$table$planner$expressions$utils$Func24$$2da7dcb3c9bedfd621ee539995571a90(org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f0, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f1, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f2, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f3).f1], _c2=[org$apache$flink$table$planner$expressions$utils$Func24$$2da7dcb3c9bedfd621ee539995571a90(org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f0, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f1, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f2, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f3).f2], _c3=[org$apache$flink$table$planner$expressions$utils$Func24$$2da7dcb3c9bedfd621ee539995571a90(org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f0, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f1, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f2, org$apache$flink$table$planner$expressions$utils$Func23$$79c21fb5a52b78edece166661f30bbd0($0, $1, $2).f3).f3])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[Func24$(Func23$(a, b, c).f0, Func23$(a, b, c).f1, Func23$(a, b, c).f2, Func23$(a, b, c).f3).f0 AS _c0, Func24$(Func23$(a, b, c).f0, Func23$(a, b, c).f1, Func23$(a, b, c).f2, Func23$(a, b, c).f3).f1 AS _c1, Func24$(Func23$(a, b, c).f0, Func23$(a, b, c).f1, Func23$(a, b, c).f2, Func23$(a, b, c).f3).f2 AS _c2, Func24$(Func23$(a, b, c).f0, Func23$(a, b, c).f1, Func23$(a, b, c).f2, Func23$(a, b, c).f3).f3 AS _c3])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testNotIn">
    <Resource name="planBefore">
      <![CDATA[
LogicalFilter(condition=[OR(AND(<>($1, 1), <>($1, 2), <>($1, 3), <>($1, 4), <>($1, 5), <>($1, 6), <>($1, 7), <>($1, 8), <>($1, 9), <>($1, 10), <>($1, 11), <>($1, 12), <>($1, 13), <>($1, 14), <>($1, 15), <>($1, 16), <>($1, 17), <>($1, 18), <>($1, 19), <>($1, 20), <>($1, 21), <>($1, 22), <>($1, 23), <>($1, 24), <>($1, 25), <>($1, 26), <>($1, 27), <>($1, 28), <>($1, 29), <>($1, 30)), <>($2, _UTF-16LE'xx'))])
+- LogicalProject(a=[$0], b=[$1], c=[$2])
   +- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[a, b, c], where=[OR(NOT IN(b, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30), <>(c, _UTF-16LE'xx'))])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testScalarResult">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(_c0=[org$apache$flink$table$planner$expressions$utils$Func1$$879c8537562dbe74f3349fa0e6502755($0)])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[Func1$(a) AS _c0])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testRenameColumns">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a2=[$0], b2=[$1])
+- LogicalTableScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[a AS a2, b AS b2])
+- LegacyTableSourceScan(table=[[default_catalog, default_database, MyTable, source: [TestTableSource(a, b, c)]]], fields=[a, b, c])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSelectFromGroupedWindow">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$1], EXPR$1=[$2], b=[$0])
+- LogicalWindowAggregate(group=[{1}], EXPR$0=[COUNT($5)], EXPR$1=[SUM($0)], window=[TumblingGroupWindow('w, rowtime, 5)], properties=[])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], $f5=[UPPER($2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
Calc(select=[EXPR$0, EXPR$1, b])
+- GroupWindowAggregate(groupBy=[b], window=[TumblingGroupWindow('w, rowtime, 5)], select=[b, COUNT($f5) AS EXPR$0, SUM(a) AS EXPR$1])
   +- Exchange(distribution=[hash[b]])
      +- Calc(select=[a, b, c, d, rowtime, UPPER(c) AS $f5])
         +- DataStreamScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
  <TestCase name="testSelectFromWindow">
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(EXPR$0=[$0], EXPR$1=[$1])
+- LogicalWindowAggregate(group=[{}], EXPR$0=[COUNT($5)], EXPR$1=[SUM($0)], window=[TumblingGroupWindow('w, rowtime, 5)], properties=[])
   +- LogicalProject(a=[$0], b=[$1], c=[$2], d=[$3], rowtime=[$4], $f5=[UPPER($2)])
      +- LogicalTableScan(table=[[default_catalog, default_database, MyTable]])
]]>
    </Resource>
    <Resource name="planAfter">
      <![CDATA[
GroupWindowAggregate(window=[TumblingGroupWindow('w, rowtime, 5)], select=[COUNT($f5) AS EXPR$0, SUM(a) AS EXPR$1])
+- Exchange(distribution=[single])
   +- Calc(select=[a, b, c, d, rowtime, UPPER(c) AS $f5])
      +- DataStreamScan(table=[[default_catalog, default_database, MyTable]], fields=[a, b, c, d, rowtime])
]]>
    </Resource>
  </TestCase>
</Root>
