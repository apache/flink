{
  "flinkVersion" : "",
  "nodes" : [ {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTableSourceScan",
    "scanTableSource" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "A"
      },
      "catalogTable" : {
        "schema.2.data-type" : "BIGINT",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.2.name" : "a3",
        "schema.1.name" : "a2",
        "bounded" : "false",
        "schema.0.name" : "a1",
        "schema.1.data-type" : "BIGINT"
      },
      "sourceAbilitySpecs" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`a1` INT, `a2` BIGINT> NOT NULL"
      } ]
    },
    "id" : 102,
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, A, project=[a1, a2]]], fields=[a1, a2])",
    "inputProperties" : [ ]
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 103,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "Exchange(distribution=[hash[a1]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecGroupAggregate",
    "grouping" : [ 0 ],
    "aggCalls" : [ ],
    "aggCallNeedRetractions" : [ ],
    "generateUpdateBefore" : true,
    "needRetraction" : false,
    "id" : 104,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT>",
    "description" : "GroupAggregate(groupBy=[a1], select=[a1])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 105,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT>",
    "description" : "Exchange(distribution=[hash[a1]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTableSourceScan",
    "scanTableSource" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "B"
      },
      "catalogTable" : {
        "schema.2.data-type" : "BIGINT",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.2.name" : "b3",
        "schema.1.name" : "b2",
        "bounded" : "false",
        "schema.0.name" : "b1",
        "schema.1.data-type" : "BIGINT"
      },
      "sourceAbilitySpecs" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ] ],
        "producedType" : "ROW<`b1` INT> NOT NULL"
      } ]
    },
    "id" : 106,
    "outputType" : "ROW<`b1` INT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, B, project=[b1]]], fields=[b1])",
    "inputProperties" : [ ]
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 107,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT>",
    "description" : "Exchange(distribution=[hash[b1]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecJoin",
    "joinSpec" : {
      "joinType" : "LEFT",
      "leftKeys" : [ 0 ],
      "rightKeys" : [ 0 ],
      "filterNulls" : [ true ],
      "nonEquiCondition" : {
        "kind" : "LITERAL",
        "value" : true,
        "type" : {
          "typeName" : "BOOLEAN",
          "nullable" : false
        }
      }
    },
    "leftUniqueKeys" : [ [ 0 ] ],
    "rightUniqueKeys" : [ ],
    "id" : 108,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    }, {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `b1` INT>",
    "description" : "Join(joinType=[LeftOuterJoin], where=[(a1 = b1)], select=[a1, b1], leftInputSpec=[JoinKeyContainsUniqueKey], rightInputSpec=[NoUniqueKey])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecSink",
    "dynamicTableSink" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "MySink"
      },
      "catalogTable" : {
        "sink-insert-only" : "false",
        "table-sink-class" : "DEFAULT",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.1.name" : "b1",
        "schema.0.name" : "a1",
        "schema.1.data-type" : "INT"
      }
    },
    "inputChangelogMode" : [ "INSERT", "UPDATE_BEFORE", "UPDATE_AFTER", "DELETE" ],
    "id" : 109,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `b1` INT>",
    "description" : "Sink(table=[default_catalog.default_database.MySink], fields=[a1, b1])"
  } ],
  "edges" : [ {
    "source" : 102,
    "target" : 103,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 103,
    "target" : 104,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 104,
    "target" : 105,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 106,
    "target" : 107,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 105,
    "target" : 108,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 107,
    "target" : 108,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 108,
    "target" : 109,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}