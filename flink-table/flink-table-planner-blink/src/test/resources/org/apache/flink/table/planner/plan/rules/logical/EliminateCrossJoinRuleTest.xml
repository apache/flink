<?xml version="1.0" ?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<Root>
  <TestCase name="testConstantFilter">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON 5 < 3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[<(5, 3)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[true], joinType=[inner])
:- LogicalValues(tuples=[[]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testDisconnectedGraph">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4, T5, T6
  WHERE a1 = a4
  AND b2 = b5
  AND c3 = c6
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13], a5=[$14], b5=[$15], c5=[$16], a6=[$17], b6=[$18], c6=[$19])
+- LogicalFilter(condition=[AND(=($0, $9), =($3, $15), =($7, $19))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$7], b2=[$8], c2=[$9], a3=[$13], b3=[$14], c3=[$15], d3=[$16], a4=[$2], b4=[$3], c4=[$4], d4=[$5], e4=[$6], a5=[$10], b5=[$11], c5=[$12], a6=[$17], b6=[$18], c6=[$19])
+- LogicalJoin(condition=[true], joinType=[inner])
   :- LogicalJoin(condition=[true], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :  +- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :     :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   +- LogicalJoin(condition=[=($2, $6)], joinType=[inner])
      :- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testFilterWithOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM (
  SELECT a1, b1, a2 FROM T1
    LEFT JOIN T2 ON a1 = a2
  ) T
  INNER JOIN T3 ON a1 = a3
  WHERE a2 IS NOT NULL
  AND b1 > b3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], a3=[$3], b3=[$4], c3=[$5], d3=[$6])
+- LogicalFilter(condition=[AND(IS NOT NULL($2), >($1, $4))])
   +- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
      :- LogicalProject(a1=[$0], b1=[$1], a2=[$2])
      :  +- LogicalJoin(condition=[=($0, $2)], joinType=[left])
      :     :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :     +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[AND(=($0, $3), >($1, $4))], joinType=[inner])
:- LogicalFilter(condition=[IS NOT NULL($2)])
:  +- LogicalProject(a1=[$0], b1=[$1], a2=[$2])
:     +- LogicalJoin(condition=[=($0, $2)], joinType=[left])
:        :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:        +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON a1 = a2
  FULL JOIN T3 ON b1 = b3
  INNER JOIN T4 ON c2 = c4
  WHERE b2 IS NOT NULL OR a3 IS NOT NULL
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   +- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $6)], joinType=[full])
      :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
+- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
   :- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   :  +- LogicalJoin(condition=[=($1, $6)], joinType=[full])
   :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :     :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :     :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testFullOuterJoinWithSubQuery">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM (
  SELECT b2, a3, c3 FROM T1, T2, T3
    WHERE a1 = a3
    AND b3 = b2
) T FULL JOIN (
  SELECT a4, b5 FROM T4, T5, T6
    WHERE a4 = a6
    AND b6 = b5
) S ON a3 = a4 AND b2 = b5
INNER JOIN T7 ON c3 = c7
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(b2=[$0], a3=[$1], c3=[$2], a4=[$3], b5=[$4], a7=[$5], b7=[$6], c7=[$7])
+- LogicalJoin(condition=[=($2, $7)], joinType=[inner])
   :- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[full])
   :  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
   :  :  +- LogicalFilter(condition=[AND(=($0, $5), =($6, $3))])
   :  :     +- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  :        +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalProject(a4=[$0], b5=[$6])
   :     +- LogicalFilter(condition=[AND(=($0, $8), =($9, $6))])
   :        +- LogicalJoin(condition=[true], joinType=[inner])
   :           :- LogicalJoin(condition=[true], joinType=[inner])
   :           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :           :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   :           +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($2, $7)], joinType=[inner])
:- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[full])
:  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
:  :  +- LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5])
:  :     +- LogicalJoin(condition=[=($3, $7)], joinType=[inner])
:  :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
:  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
:  :        +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
:  +- LogicalProject(a4=[$0], b5=[$6])
:     +- LogicalProject(a4=[$0], b4=[$1], c4=[$2], d4=[$3], e4=[$4], a5=[$8], b5=[$9], c5=[$10], a6=[$5], b6=[$6], c6=[$7])
:        +- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
:           :- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
:           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
:           :  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
:           +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4
  WHERE a2 = a4
  AND b1 = b3
  AND c2 = c3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[AND(=($2, $9), =($1, $6), =($4, $7))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
   :- LogicalJoin(condition=[=($8, $4)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($1, $3)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testInnerJoinWithCompleteGraph">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4
  WHERE a2 = a4
  AND b1 = b3
  AND c2 = c3
  AND a1 = a4
  AND b2 = b1
  AND d4 = d3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[AND(=($2, $9), =($1, $6), =($4, $7), =($0, $9), =($3, $1), =($12, $8))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[AND(=($2, $9), =($0, $9), =($12, $8))], joinType=[inner])
:- LogicalJoin(condition=[AND(=($1, $6), =($4, $7))], joinType=[inner])
:  :- LogicalJoin(condition=[=($3, $1)], joinType=[inner])
:  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
:  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON a1 = a2
  LEFT JOIN T3 ON b1 = b3
  INNER JOIN T4 ON c2 = c4
  WHERE b2 IS NOT NULL OR a3 IS NOT NULL
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   +- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $6)], joinType=[left])
      :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
+- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
   :- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   :  +- LogicalJoin(condition=[=($1, $6)], joinType=[left])
   :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :     :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :     :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testLeftOuterJoinWithSubQuery">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM (
  SELECT b2, a3, c3 FROM T1, T2, T3
    WHERE a1 = a3
    AND b3 = b2
) T LEFT JOIN (
  SELECT a4, b5 FROM T4, T5, T6
    WHERE a4 = a6
    AND b6 = b5
) S ON a3 = a4 AND b2 = b5
INNER JOIN T7 ON c3 = c7
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(b2=[$0], a3=[$1], c3=[$2], a4=[$3], b5=[$4], a7=[$5], b7=[$6], c7=[$7])
+- LogicalJoin(condition=[=($2, $7)], joinType=[inner])
   :- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[left])
   :  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
   :  :  +- LogicalFilter(condition=[AND(=($0, $5), =($6, $3))])
   :  :     +- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  :        +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalProject(a4=[$0], b5=[$6])
   :     +- LogicalFilter(condition=[AND(=($0, $8), =($9, $6))])
   :        +- LogicalJoin(condition=[true], joinType=[inner])
   :           :- LogicalJoin(condition=[true], joinType=[inner])
   :           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :           :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   :           +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($2, $7)], joinType=[inner])
:- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[left])
:  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
:  :  +- LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5])
:  :     +- LogicalJoin(condition=[=($3, $7)], joinType=[inner])
:  :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
:  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
:  :        +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
:  +- LogicalProject(a4=[$0], b5=[$6])
:     +- LogicalProject(a4=[$0], b4=[$1], c4=[$2], d4=[$3], e4=[$4], a5=[$8], b5=[$9], c5=[$10], a6=[$5], b6=[$6], c6=[$7])
:        +- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
:           :- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
:           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
:           :  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
:           +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testLongJoinFilter">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4, T5, T6
  WHERE a1 = a4
  AND b5 = b4
  AND c6 = c4
  AND a3 = a6
  AND b2 = b6
  AND (b6 < b1 OR a1 > a5 OR b4 > b6)
  AND (c3 < c6 OR a1 > a6 OR d4 < d3)
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13], a5=[$14], b5=[$15], c5=[$16], a6=[$17], b6=[$18], c6=[$19])
+- LogicalFilter(condition=[AND(=($0, $9), =($15, $10), =($19, $11), =($5, $17), =($3, $18), OR(<($18, $1), >($0, $14), >($10, $18)), OR(<($7, $19), >($0, $17), <($12, $8)))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$10], b2=[$11], c2=[$12], a3=[$16], b3=[$17], c3=[$18], d3=[$19], a4=[$2], b4=[$3], c4=[$4], d4=[$5], e4=[$6], a5=[$7], b5=[$8], c5=[$9], a6=[$13], b6=[$14], c6=[$15])
+- LogicalJoin(condition=[AND(=($15, $4), OR(<($14, $1), >($0, $7), >($3, $14)), OR(<($18, $15), >($0, $13), <($5, $19)))], joinType=[inner])
   :- LogicalJoin(condition=[=($8, $3)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   +- LogicalJoin(condition=[=($6, $3)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
      :  :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyOneLeftOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  LEFT JOIN T2 ON a1 = a2
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[=($0, $2)], joinType=[left])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $2)], joinType=[left])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testManyOuterJoins">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM (
  SELECT a1, b4, c5 FROM T4, T5, T1
    INNER JOIN T2 ON a1 = a2
    LEFT JOIN T3 ON a1 = a3
    WHERE a1 = a4
    AND a1 = a5
) T
  RIGHT JOIN T6 ON a1 = a6
  FULL JOIN T7 ON a1 = a7
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b4=[$1], c5=[$2], a6=[$3], b6=[$4], c6=[$5], a7=[$6], b7=[$7], c7=[$8])
+- LogicalJoin(condition=[=($0, $6)], joinType=[full])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[right])
   :  :- LogicalProject(a1=[$8], b4=[$1], c5=[$7])
   :  :  +- LogicalFilter(condition=[AND(=($8, $0), =($8, $5))])
   :  :     +- LogicalJoin(condition=[=($8, $13)], joinType=[left])
   :  :        :- LogicalJoin(condition=[=($8, $10)], joinType=[inner])
   :  :        :  :- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :  :  :- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :  :        :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   :  :        :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  :        +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $6)], joinType=[full])
:- LogicalJoin(condition=[=($0, $3)], joinType=[right])
:  :- LogicalProject(a1=[$8], b4=[$1], c5=[$7])
:  :  +- LogicalProject(a4=[$0], b4=[$1], c4=[$2], d4=[$3], e4=[$4], a5=[$7], b5=[$8], c5=[$9], a1=[$5], b1=[$6], a2=[$10], b2=[$11], c2=[$12], a3=[$13], b3=[$14], c3=[$15], d3=[$16])
:  :     +- LogicalJoin(condition=[=($5, $13)], joinType=[left])
:  :        :- LogicalJoin(condition=[=($5, $10)], joinType=[inner])
:  :        :  :- LogicalJoin(condition=[=($5, $7)], joinType=[inner])
:  :        :  :  :- LogicalJoin(condition=[=($5, $0)], joinType=[inner])
:  :        :  :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
:  :        :  :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:  :        :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
:  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
:  :        +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
:  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOneInputFilter">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON a1 = 1
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[=($0, 1)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[true], joinType=[inner])
:- LogicalFilter(condition=[=($0, 1)])
:  +- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyOneFullOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  FULL JOIN T2 ON a1 = a2
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[=($0, $2)], joinType=[full])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $2)], joinType=[full])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyOneInnerJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON a1 = a2
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $2)], joinType=[inner])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoinWithSubQuery">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM (
  SELECT b2, a3, c3 FROM T1, T2, T3
    WHERE a1 = a3
    AND b3 = b2
) T RIGHT JOIN (
  SELECT a4, b5 FROM T4, T5, T6
    WHERE a4 = a6
    AND b6 = b5
) S ON a3 = a4 AND b2 = b5
INNER JOIN T7 ON c3 = c7
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(b2=[$0], a3=[$1], c3=[$2], a4=[$3], b5=[$4], a7=[$5], b7=[$6], c7=[$7])
+- LogicalJoin(condition=[=($2, $7)], joinType=[inner])
   :- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[right])
   :  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
   :  :  +- LogicalFilter(condition=[AND(=($0, $5), =($6, $3))])
   :  :     +- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :- LogicalJoin(condition=[true], joinType=[inner])
   :  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :  :        +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalProject(a4=[$0], b5=[$6])
   :     +- LogicalFilter(condition=[AND(=($0, $8), =($9, $6))])
   :        +- LogicalJoin(condition=[true], joinType=[inner])
   :           :- LogicalJoin(condition=[true], joinType=[inner])
   :           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
   :           :  +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
   :           +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($2, $7)], joinType=[inner])
:- LogicalJoin(condition=[AND(=($1, $3), =($0, $4))], joinType=[right])
:  :- LogicalProject(b2=[$3], a3=[$5], c3=[$7])
:  :  +- LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5])
:  :     +- LogicalJoin(condition=[=($3, $7)], joinType=[inner])
:  :        :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
:  :        :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
:  :        :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
:  :        +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
:  +- LogicalProject(a4=[$0], b5=[$6])
:     +- LogicalProject(a4=[$0], b4=[$1], c4=[$2], d4=[$3], e4=[$4], a5=[$8], b5=[$9], c5=[$10], a6=[$5], b6=[$6], c6=[$7])
:        +- LogicalJoin(condition=[=($6, $9)], joinType=[inner])
:           :- LogicalJoin(condition=[=($0, $5)], joinType=[inner])
:           :  :- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
:           :  +- LogicalTableScan(table=[[default_catalog, default_database, T6, source: [TestTableSource(a6, b6, c6)]]])
:           +- LogicalTableScan(table=[[default_catalog, default_database, T5, source: [TestTableSource(a5, b5, c5)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T7, source: [TestTableSource(a7, b7, c7)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testNonEquiFilters">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4
  WHERE a1 = a3
  AND b2 = b3
  AND d4 = d3
  AND b1 < b3
  AND c2 > c3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[AND(=($0, $5), =($3, $6), =($12, $8), <($1, $6), >($4, $7))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalJoin(condition=[=($12, $5)], joinType=[inner])
   :- LogicalJoin(condition=[AND(=($7, $3), >($8, $4))], joinType=[inner])
   :  :- LogicalJoin(condition=[AND(=($0, $2), <($1, $3))], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testOnlyOneRightOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  RIGHT JOIN T2 ON a1 = a2
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4])
+- LogicalJoin(condition=[=($0, $2)], joinType=[right])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=($0, $2)], joinType=[right])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testStarSchema">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3, T4
  WHERE a1 = a3
  AND b2 = b3
  AND c4 = c3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[AND(=($0, $5), =($3, $6), =($11, $7))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalJoin(condition=[true], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$6], b2=[$7], c2=[$8], a3=[$2], b3=[$3], c3=[$4], d3=[$5], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalJoin(condition=[=($11, $4)], joinType=[inner])
   :- LogicalJoin(condition=[=($7, $3)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testRightOuterJoin">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1
  INNER JOIN T2 ON a1 = a2
  RIGHT JOIN T3 ON b1 = b3
  INNER JOIN T4 ON c2 = c4
  WHERE b2 IS NOT NULL OR a3 IS NOT NULL
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8], a4=[$9], b4=[$10], c4=[$11], d4=[$12], e4=[$13])
+- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   +- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
      :- LogicalJoin(condition=[=($1, $6)], joinType=[right])
      :  :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
      :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
+- LogicalJoin(condition=[=($4, $11)], joinType=[inner])
   :- LogicalFilter(condition=[OR(IS NOT NULL($3), IS NOT NULL($5))])
   :  +- LogicalJoin(condition=[=($1, $6)], joinType=[right])
   :     :- LogicalJoin(condition=[=($0, $2)], joinType=[inner])
   :     :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
   :     :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   :     +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4, source: [TestTableSource(a4, b4, c4, d4, e4)]]])
]]>

    </Resource>
  </TestCase>
  <TestCase name="testTwoInputRefsOnSameSide">
    <Resource name="sql">
      <![CDATA[
SELECT * FROM T1, T2, T3
  WHERE a1 + a2 = 1
  AND b2 = b3
]]>

    </Resource>
    <Resource name="planBefore">
      <![CDATA[
LogicalProject(a1=[$0], b1=[$1], a2=[$2], b2=[$3], c2=[$4], a3=[$5], b3=[$6], c3=[$7], d3=[$8])
+- LogicalFilter(condition=[AND(=(+($0, $2), 1), =($3, $6))])
   +- LogicalJoin(condition=[true], joinType=[inner])
      :- LogicalJoin(condition=[true], joinType=[inner])
      :  :- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
      :  +- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
]]>

    </Resource>
    <Resource name="planAfter">
      <![CDATA[
LogicalJoin(condition=[=(+($0, $2), 1)], joinType=[inner])
:- LogicalTableScan(table=[[default_catalog, default_database, T1, source: [TestTableSource(a1, b1)]]])
+- LogicalJoin(condition=[=($1, $4)], joinType=[inner])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2, source: [TestTableSource(a2, b2, c2)]]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T3, source: [TestTableSource(a3, b3, c3, d3)]]])
]]>

    </Resource>
  </TestCase>
</Root>
