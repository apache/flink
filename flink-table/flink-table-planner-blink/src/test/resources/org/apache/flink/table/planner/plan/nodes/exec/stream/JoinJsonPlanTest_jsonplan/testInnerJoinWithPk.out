{
  "flinkVersion" : "",
  "nodes" : [ {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTableSourceScan",
    "scanTableSource" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "A"
      },
      "catalogTable" : {
        "schema.2.data-type" : "BIGINT",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.2.name" : "a3",
        "schema.1.name" : "a2",
        "bounded" : "false",
        "schema.0.name" : "a1",
        "schema.1.data-type" : "BIGINT"
      },
      "sourceAbilitySpecs" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`a1` INT, `a2` BIGINT> NOT NULL"
      } ]
    },
    "id" : 11,
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, A, project=[a1, a2]]], fields=[a1, a2])",
    "inputProperties" : [ ]
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 12,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "Exchange(distribution=[hash[a1]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecGroupAggregate",
    "grouping" : [ 0 ],
    "aggCalls" : [ {
      "name" : "a2",
      "aggFunction" : {
        "name" : "SUM",
        "kind" : "SUM",
        "syntax" : "FUNCTION"
      },
      "argList" : [ 1 ],
      "filterArg" : -1,
      "distinct" : false,
      "approximate" : false,
      "ignoreNulls" : false,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    } ],
    "aggCallNeedRetractions" : [ false ],
    "generateUpdateBefore" : true,
    "needRetraction" : false,
    "id" : 13,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT>",
    "description" : "GroupAggregate(groupBy=[a1], select=[a1, SUM(a2) AS a2])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecCalc",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : {
        "typeName" : "INTEGER",
        "nullable" : true
      }
    } ],
    "condition" : null,
    "id" : 14,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a2` BIGINT, `a1` INT>",
    "description" : "Calc(select=[a2, a1])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 15,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a2` BIGINT, `a1` INT>",
    "description" : "Exchange(distribution=[hash[a2]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecTableSourceScan",
    "scanTableSource" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "B"
      },
      "catalogTable" : {
        "schema.2.data-type" : "BIGINT",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.2.name" : "b3",
        "schema.1.name" : "b2",
        "bounded" : "false",
        "schema.0.name" : "b1",
        "schema.1.data-type" : "BIGINT"
      },
      "sourceAbilitySpecs" : [ {
        "type" : "ProjectPushDown",
        "projectedFields" : [ [ 0 ], [ 1 ] ],
        "producedType" : "ROW<`b1` INT, `b2` BIGINT> NOT NULL"
      } ]
    },
    "id" : 16,
    "outputType" : "ROW<`b1` INT, `b2` BIGINT>",
    "description" : "TableSourceScan(table=[[default_catalog, default_database, B, project=[b1, b2]]], fields=[b1, b2])",
    "inputProperties" : [ ]
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 17,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT, `b2` BIGINT>",
    "description" : "Exchange(distribution=[hash[b1]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecGroupAggregate",
    "grouping" : [ 0 ],
    "aggCalls" : [ {
      "name" : "b2",
      "aggFunction" : {
        "name" : "SUM",
        "kind" : "SUM",
        "syntax" : "FUNCTION"
      },
      "argList" : [ 1 ],
      "filterArg" : -1,
      "distinct" : false,
      "approximate" : false,
      "ignoreNulls" : false,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    } ],
    "aggCallNeedRetractions" : [ false ],
    "generateUpdateBefore" : true,
    "needRetraction" : false,
    "id" : 18,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b1` INT, `b2` BIGINT>",
    "description" : "GroupAggregate(groupBy=[b1], select=[b1, SUM(b2) AS b2])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecCalc",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : {
        "typeName" : "INTEGER",
        "nullable" : true
      }
    } ],
    "condition" : null,
    "id" : 19,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b2` BIGINT, `b1` INT>",
    "description" : "Calc(select=[b2, b1])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecExchange",
    "id" : 20,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "HASH",
        "keys" : [ 0 ]
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`b2` BIGINT, `b1` INT>",
    "description" : "Exchange(distribution=[hash[b2]])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecJoin",
    "joinSpec" : {
      "joinType" : "INNER",
      "leftKeys" : [ 0 ],
      "rightKeys" : [ 0 ],
      "filterNulls" : [ true ],
      "nonEquiCondition" : null
    },
    "leftUniqueKeys" : [ [ 1 ] ],
    "rightUniqueKeys" : [ [ 1 ] ],
    "id" : 21,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    }, {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a2` BIGINT, `a1` INT, `b2` BIGINT, `b1` INT>",
    "description" : "Join(joinType=[InnerJoin], where=[(a2 = b2)], select=[a2, a1, b2, b1], leftInputSpec=[HasUniqueKey], rightInputSpec=[HasUniqueKey])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecCalc",
    "projection" : [ {
      "kind" : "INPUT_REF",
      "inputIndex" : 1,
      "type" : {
        "typeName" : "INTEGER",
        "nullable" : true
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 0,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 3,
      "type" : {
        "typeName" : "INTEGER",
        "nullable" : true
      }
    }, {
      "kind" : "INPUT_REF",
      "inputIndex" : 2,
      "type" : {
        "typeName" : "BIGINT",
        "nullable" : true
      }
    } ],
    "condition" : null,
    "id" : 22,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT, `b1` INT, `b2` BIGINT>",
    "description" : "Calc(select=[a1, a2, b1, b2])"
  }, {
    "class" : "org.apache.flink.table.planner.plan.nodes.exec.stream.StreamExecSink",
    "dynamicTableSink" : {
      "identifier" : {
        "catalogName" : "default_catalog",
        "databaseName" : "default_database",
        "tableName" : "MySink"
      },
      "catalogTable" : {
        "schema.3.data-type" : "BIGINT",
        "sink-insert-only" : "false",
        "table-sink-class" : "DEFAULT",
        "schema.2.data-type" : "INT",
        "schema.3.name" : "b2",
        "connector" : "values",
        "schema.0.data-type" : "INT",
        "schema.2.name" : "b1",
        "schema.1.name" : "a2",
        "schema.0.name" : "a1",
        "schema.1.data-type" : "BIGINT"
      }
    },
    "inputChangelogMode" : [ "INSERT", "UPDATE_BEFORE", "UPDATE_AFTER" ],
    "id" : 23,
    "inputProperties" : [ {
      "requiredDistribution" : {
        "type" : "UNKNOWN"
      },
      "damBehavior" : "PIPELINED",
      "priority" : 0
    } ],
    "outputType" : "ROW<`a1` INT, `a2` BIGINT, `b1` INT, `b2` BIGINT>",
    "description" : "Sink(table=[default_catalog.default_database.MySink], fields=[a1, a2, b1, b2])"
  } ],
  "edges" : [ {
    "source" : 11,
    "target" : 12,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 12,
    "target" : 13,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 13,
    "target" : 14,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 14,
    "target" : 15,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 16,
    "target" : 17,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 17,
    "target" : 18,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 18,
    "target" : 19,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 19,
    "target" : 20,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 15,
    "target" : 21,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 20,
    "target" : 21,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 21,
    "target" : 22,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  }, {
    "source" : 22,
    "target" : 23,
    "shuffle" : {
      "type" : "FORWARD"
    },
    "shuffleMode" : "PIPELINED"
  } ]
}