<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-connectors</artifactId>
		<version>1.12-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>flink-connector-kinesis_${scala.binary.version}</artifactId>
	<name>Flink : Connectors : Kinesis</name>
	<properties>
		<aws.sdk.version>1.11.754</aws.sdk.version>
		<aws.sdkv2.version>2.13.52</aws.sdkv2.version>
		<aws.kinesis-kcl.version>1.11.2</aws.kinesis-kcl.version>
		<aws.kinesis-kpl.version>0.14.0</aws.kinesis-kpl.version>
		<aws.dynamodbstreams-kinesis-adapter.version>1.5.0</aws.dynamodbstreams-kinesis-adapter.version>
		<httpclient.version>4.5.9</httpclient.version>
		<httpcore.version>4.4.11</httpcore.version>
	</properties>

	<packaging>jar</packaging>

	<dependencies>
		<!-- AWS dependencies -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-kinesis-aggregator</artifactId>
			<version>1.0.3</version>
			<scope>test</scope>
		</dependency>

		<!-- Amazon AWS SDK v1.x dependencies -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-kinesis</artifactId>
			<version>${aws.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-sts</artifactId>
			<version>${aws.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-kinesis-producer</artifactId>
			<version>${aws.kinesis-kpl.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>amazon-kinesis-client</artifactId>
			<version>${aws.kinesis-kcl.version}</version>
			<!--
				We're excluding the below from the KCL since we'll only be using the
				com.amazonaws.services.kinesis.clientlibrary.types.UserRecord class, which will not need these dependencies.
			-->
			<exclusions>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>aws-java-sdk-cloudwatch</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>dynamodb-streams-kinesis-adapter</artifactId>
			<version>${aws.dynamodbstreams-kinesis-adapter.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.amazonaws</groupId>
					<artifactId>aws-java-sdk-cloudwatch</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Other third-party dependencies -->
		<dependency>
			<!-- KPL requires jaxb-api for javax.xml.bind.DatatypeConverter -->
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb.api.version}</version>
			<!-- packaged in flink-dist -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- Flink ecosystem -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Flink Table API ecosystem -->
		<!-- Projects depending on this project won't depend on flink-table-*. -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-core</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-tests</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-runtime_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<!-- Kinesis table factory testing -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-common</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<!-- Amazon AWS SDK v2.x dependencies -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>kinesis</artifactId>
			<version>${aws.sdkv2.version}</version>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>netty-nio-client</artifactId>
			<version>${aws.sdkv2.version}</version>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>sts</artifactId>
			<version>${aws.sdkv2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>${httpcore.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-cbor</artifactId>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.9</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/org/apache/flink/streaming/connectors/kinesis/testutils/**</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>shade-flink</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<promoteTransitiveDependencies>true</promoteTransitiveDependencies>
							<artifactSet combine.children="append">
								<includes>
									<include>com.amazonaws:*</include>
									<include>com.google.protobuf:*</include>
									<include>org.apache.httpcomponents:*</include>
									<include>software.amazon.awssdk:*</include>
									<include>software.amazon.eventstream:*</include>
									<include>software.amazon.ion:*</include>
									<include>org.reactivestreams:*</include>
									<include>io.netty:*</include>
									<include>com.typesafe.netty:*</include>
								</includes>
							</artifactSet>
							<relocations combine.children="override">
								<!-- Do not relocate guava because it is exposed in the Kinesis API (KinesisProducer#addUserRecord).
								 	Users may be using other affected API's, so relocations may break user-code -->
								<relocation>
									<pattern>com.google.protobuf</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.com.google.protobuf</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.amazonaws</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.com.amazonaws</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.http</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.org.apache.http</shadedPattern>
								</relocation>
								<relocation>
									<pattern>software.amazon</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.software.amazon</shadedPattern>
								</relocation>
								<relocation>
									<pattern>io.netty</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.io.netty</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.typesafe.netty</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.com.typesafe.netty</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.reactivestreams</pattern>
									<shadedPattern>org.apache.flink.kinesis.shaded.org.reactivestreams</shadedPattern>
								</relocation>
							</relocations>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>.gitkeep</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>com.amazonaws:amazon-kinesis-producer</artifact>
									<excludes>
										<exclude>META-INF/THIRD_PARTY_NOTICES</exclude>
									</excludes>
								</filter>
								<filter>
									<artifact>software.amazon.awssdk:*</artifact>
									<excludes>
										<exclude>META-INF/services/**</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
