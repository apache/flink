<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>flink-connectors</artifactId>
		<groupId>org.apache.flink</groupId>
		<version>1.12-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>flink-sql-connector-hbase_${scala.binary.version}</artifactId>
	<name>Flink : Connectors : SQL : HBase</name>

	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-hbase_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>shade-flink</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<!--
							Make the file hbase-default.xml under flink-sql-connector-hbase/src/main/resources as the
							hbase-default.xml in the shaded target jar here, because we don't want to check the hbase
							version at client side. Also we don't need the extra default configs keys.
							-->
							<transformers>
								<transformer
										implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
									<resource>hbase-default.xml</resource>
									<file>hbase-default.xml</file>
								</transformer>
							</transformers>
							<shadeTestJar>false</shadeTestJar>
							<artifactSet>
								<includes>
									<include>org.apache.flink:flink-connector-hbase_${scala.binary.version}</include>
									<include>org.apache.hbase:hbase-*</include>
									<include>org.apache.zookeeper:zookeeper</include>
									<include>org.apache.htrace:htrace-core</include>
									<include>com.google.guava:guava</include>
									<include>com.google.protobuf:protobuf-java</include>
									<include>com.yammer.metrics:metrics-core</include>
									<include>commons-logging:commons-logging</include>
									<include>commons-lang:commons-lang</include>
									<include>commons-configuration:commons-configuration</include>
									<include>commons-codec:commons-codec</include>
									<include>io.netty:netty-all</include>
								</includes>
								<excludes>
									<exclude>org.apache.hbase:hbase-metrics*</exclude>
									<exclude>org.apache.hbase:hbase-server*</exclude>
									<exclude>org.apache.hbase:hbase-hadoop*-compat</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<!-- excluded all these files for a clean jar -->
										<exclude>META-INF/services/com.fasterxml.**</exclude>
										<exclude>META-INF/services/org.apache.hadoop.**</exclude>
										<exclude>META-INF/services/javax.**</exclude>
 										<exclude>digesterRules.xml</exclude>
										<exclude>properties.dtd</exclude>
										<exclude>PropertyList-1.0.dtd</exclude>
										<exclude>LICENSE.txt</exclude>
									</excludes>
								</filter>
							</filters>
							<relocations>
								<!-- Force relocation of all HBase dependencies. -->
								<relocation>
									<pattern>org.apache.zookeeper</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.org.apache.zookeeper</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.htrace</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.org.apache.htrace</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.google</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.com.google</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.yammer.metrics</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.com.yammer.metrics</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.commons</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.org.apache.commons</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.jute</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.org.apache.jute</shadedPattern>
								</relocation>
								<relocation>
									<pattern>io.netty</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.io.netty</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.hadoop.hbase</pattern>
									<shadedPattern>org.apache.flink.hbase.shaded.org.apache.hadoop.hbase</shadedPattern>
									<!-- HBase client uses shaded KeyValueCodec to encode data and put the class name in
 										the header of request, the HBase region server can not load the shaded
										KeyValueCodec class when decode the data, so we exclude them here. -->
									<excludes>
										<exclude>org.apache.hadoop.hbase.codec.*</exclude>
									</excludes>
								</relocation>
							</relocations>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
