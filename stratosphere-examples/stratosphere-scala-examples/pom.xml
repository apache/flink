<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>eu.stratosphere</groupId>
		<artifactId>stratosphere-examples</artifactId>
		<version>0.6-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>stratosphere-scala-examples</artifactId>
	<name>stratosphere-scala-examples</name>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>eu.stratosphere</groupId>
			<artifactId>stratosphere-scala</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Scala Compiler -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.4</version>
				<executions>
					<!-- Run scala compiler in the process-resources phase, so that dependencies on
					    scala classes can be resolved later in the (Java) compile phase -->
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
 
					<!-- Run scala compiler in the process-test-resources phase, so that dependencies on
					     scala classes can be resolved later in the (Java) test-compile phase -->
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArgs>
						<jvmArg>-Xms128m</jvmArg>
						<jvmArg>-Xmx512m</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>
			
			<!-- Eclipse Integration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<projectnatures>
						<projectnature>org.scala-ide.sdt.core.scalanature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.scala-ide.sdt.core.scalabuilder</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.scala-ide.sdt.launching.SCALA_CONTAINER</classpathContainer>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<exclude>org.scala-lang:scala-library</exclude>
						<exclude>org.scala-lang:scala-compiler</exclude>
					</excludes>
					<sourceIncludes>
						<sourceInclude>**/*.scala</sourceInclude>
						<sourceInclude>**/*.java</sourceInclude>
					</sourceIncludes>
				</configuration>
			</plugin>

			<!-- Adding scala source directories to build path -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- Add src/main/scala to eclipse build path -->
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/scala</source>
							</sources>
						</configuration>
					</execution>
					<!-- Add src/test/scala to eclipse build path -->
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/scala</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>

					<execution>
						<id>KMeans</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
		
						<configuration>
							<classifier>KMeans</classifier>
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.datamining.KMeans</program-class>
								</manifestEntries>
							</archive>
		
							<includes>
								<include>**/datamining/KMeans*.class</include>
							</includes>
						</configuration>
					</execution>

					<!--  Uncomment to rebuild the KMeansForTest jar
					<execution>
						<id>KMeansForTest</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
				
						<configuration>
							<classifier>KMeansForTest</classifier>
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.testing.KMeansForTest</program-class>
								</manifestEntries>
							</archive>
				
							<includes>
								<include>**/testing/KMeansForTest*.class</include>
							</includes>
						</configuration>
					</execution> -->
		
					<execution>
						<id>ComputeEdgeDegrees</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
		
						<configuration>
							<classifier>ComputeEdgeDegrees</classifier>
		
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.graph.ComputeEdgeDegrees</program-class>
								</manifestEntries>
							</archive>
		
							<includes>
								<include>**/graph/ComputeEdgeDegrees*.class</include>
							</includes>
						</configuration>
					</execution>
		
					<execution>
						<id>EnumTrianglesOnEdgesWithDegrees</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
		
						<configuration>
							<classifier>EnumTrianglesOnEdgesWithDegrees</classifier>
		
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.graph.EnumTrianglesOnEdgesWithDegrees</program-class>
								</manifestEntries>
							</archive>
		
							<includes>
								<include>**/graph/EnumTrianglesOnEdgesWithDegrees*.class</include>
							</includes>
						</configuration>
					</execution>
		
					<execution>
						<id>TPCHQuery3</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
		
						<configuration>
							<classifier>TPCHQuery3</classifier>
		
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.relational.TPCHQuery3</program-class>
								</manifestEntries>
							</archive>
		
							<includes>
								<include>**/relational/TPCHQuery3*.class</include>
							</includes>
						</configuration>
					</execution>
		
					<execution>
						<id>WordCount</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
		
						<configuration>
							<classifier>WordCount</classifier>
		
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.wordcount.WordCount</program-class>
								</manifestEntries>
							</archive>
		
							<includes>
								<include>**/wordcount/WordCount*.class</include>
							</includes>
						</configuration>
					</execution>

					<execution>
						<id>ConnectedComponents</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>ConnectedComponents</classifier>
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.graph.ConnectedComponents</program-class>
								</manifestEntries>
							</archive>
							<includes>
								<include>**/graph/ConnectedComponents*.class</include>
							</includes>
						</configuration>
					</execution>
					
					<!--  These examples need not yet supported features
					<execution>
						<id>TransitiveClosureNaive</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>TransitiveClosureNaive</classifier>
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.graph.TransitiveClosureNaiveDescriptor</program-class>
								</manifestEntries>
							</archive>
							<includes>
								<include>**/graph/TransitiveClosureNaive*.class</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>TransitiveClosureRD</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>TransitiveClosureRD</classifier>
							<archive>
								<manifestEntries>
									<program-class>eu.stratosphere.examples.scala.graph.TransitiveClosureRDDescriptor</program-class>
								</manifestEntries>
							</archive>
							<includes>
								<include>**/graph/TransitiveClosureRD*.class</include>
							</includes>
						</configuration>
					</execution> -->
		
				</executions>
			</plugin>
			
		</plugins>
	</build>

</project>
